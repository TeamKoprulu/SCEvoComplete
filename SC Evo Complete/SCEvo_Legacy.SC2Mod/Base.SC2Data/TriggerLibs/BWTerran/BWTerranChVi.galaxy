//==================================================================================================
//  BWTerran Melee Cheater-Vision
//==================================================================================================

// uses the very hard builds, but cheats vision to make better counters and stop cheese

//--------------------------------------------------------------------------------------------------
//  TerranOpenChVi
//--------------------------------------------------------------------------------------------------
void BWTerranOpenChVi (int player) {
    bool done = false;
    int buildIndex;

    AIEarlyDefenseScouting(player);

    // see if we need to switch builds
    UpdateHDBWTerranOpening(player);
    
    buildIndex = AIGetUserInt(player, c_currentBuildIndex);
    if (buildIndex == e_BWhdBuildIndex_TOpenRush_Marine)                      { done = BWTerranOpenRushMarineVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TOpenRush_MarineReaper)           { done = BWTerranOpenRushMarineReaperVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TOpenRush_ProxyBarracks)          { done = BWTerranOpenRushProxyBarracksVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TOpenTiming_MMStim)               { done = BWTerranOpenTimingMMStimVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TOpenTiming_VultureFirebat)      { done = BWTerranOpenTimingVultureFirebatVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TOpenTiming_MariSiege)            { done = BWTerranOpenTimingMariSiegeVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TOpenTiming_CloakBanshee)         { done = BWTerranOpenTimingCloakBansheeVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TOpenPowerMacro_QuickExpGnd)      { done = BWTerranOpenPowerMacroQuickExpGndVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TOpenPowerMacro_MarineExpGnd)     { done = BWTerranOpenPowerMacroMarineExpGndVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TOpenPowerMacro_DefenseExpGnd)    { done = BWTerranOpenPowerMacroDefenseExpGndVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TOpenAir_OneBaseAir)              { done = BWTerranOpenAirOneBaseAirVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TOpenAir_OneBaseDrop)             { done = BWTerranOpenAirOneBaseDropVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TOpenAir_CloakBanshee)            { done = BWTerranOpenAirCloakBansheeVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TOpenAir_QuickExpandAir)          { done = BWTerranOpenAirQuickExpandAirVyHd (player); }
    else { ErrorMeleeScript(player, "Invalid Open BuildIndex BWTerranChVi"); }

    if (done) {
        BWTerranHDInitMid(player); // Transition to MidGame
    }
}

//--------------------------------------------------------------------------------------------------
//  BWTerranMidChVi
//--------------------------------------------------------------------------------------------------
void BWTerranMidChVi (int player) {
    bool done = false;
    int buildIndex;
    
    // enable scouting as appropriate
    if (AIGetUserInt(player, c_numGroundStartLocs) > 0) {
        AIScoutingEnable(player, 12, c_BWTU_SCV);
        AIEarlyDefenseScouting(player);
    }
    else {
        AIScoutingEnable(player, 1, c_BWTU_Dropship);
    }

    // see if we need to switch builds
    UpdateHDBWTerranMidGame(player);
    
    buildIndex = AIGetUserInt(player, c_currentBuildIndex);
    if (buildIndex == e_BWhdBuildIndex_TMidRushTiming_MMMedivac)              { done = BWTerranMidRushTimingMMMedivacVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidRushTiming_DefensiveExpand)   { done = BWTerranMidRushTimingDefensiveExpandVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidPower_MMMedivac)              { done = BWTerranMidPowerMMMedivacVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidPower_MMSiege)                { done = BWTerranMidPowerMMSiegeVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidPower_SiegeBanshee)           { done = BWTerranMidPowerSiegeBansheeVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidPower_HellionSiege)           { done = BWTerranMidPowerHellionSiegeVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidPower_SiegeThor)              { done = BWTerranMidPowerSiegeThorVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidMacro_Bio)                    { done = BWTerranMidMacroBioVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidMacro_Mech)                   { done = BWTerranMidMacroMechVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidMacro_ThorBC)                 { done = BWTerranMidMacroThorBCVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidAir_OneBaseAir)               { done = BWTerranMidAirOneBaseAirVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidAir_OneBaseDrop)              { done = BWTerranMidAirOneBaseDropVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidAir_ExpansionVikingBanshee)   { done = BWTerranMidAirExpansionVikingBansheeVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidAir_ExpansionBC)              { done = BWTerranMidAirExpansionBCVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidAir_ExpansionDropAir)         { done = BWTerranMidAirExpansionDropAirVyHd (player); }
    else if (buildIndex == e_BWhdBuildIndex_TMidAir_Macro)                    { done = BWTerranMidAirMacroVyHd (player); }
    else { ErrorMeleeScript(player, "Invalid Mid BuildIndex BWTerranChVi"); }

    if (done) {
        BWTerranHDInitLate(player); // Transition to LateGame
    }
}

//==================================================================================================
//  LATE GAME
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  BWTerranLateChVi
//--------------------------------------------------------------------------------------------------
void BWTerranLateChVi (int player) {
    BWTerranLateVyHd(player);
}
