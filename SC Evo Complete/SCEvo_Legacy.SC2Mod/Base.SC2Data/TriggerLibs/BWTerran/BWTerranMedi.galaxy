//==================================================================================================
//  BWTerran Medium Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  BWTerranUpgradesMedi
//--------------------------------------------------------------------------------------------------
void BWTerranUpgradesMedi (int player, int phase) {
    int buildType;

    if (phase < c_ldPhaseLate) {
        buildType = AIGetUserInt(player, c_openingBuildType);
    } else {
        buildType = AIGetUserInt(player, c_lateGameBuildType);
    }

    if (buildType != e_buildType_Air) {


        if (phase >= c_ldPhaseMid) {


            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_BWTR_StimpackSCBWResearch );
                AISetStock( player, 1, c_BWTR_MarineSCBWRangeUpgrade );
                AISetStock( player, 1, c_BWTR_TerranInfantryWeaponsSCBW_Lvl1 );
                AISetStock( player, 1, c_BWTR_TerranInfantryArmorsSCBW_Lvl1 );

                if (phase >= c_ldPhaseFinal) {

                    AISetStock( player, 1, c_BWTR_TerranInfantryWeaponsSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWTR_TerranInfantryArmorsSCBW_Lvl3 );
                    if (AITechCount(player, c_BWTU_Vulture, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWTR_VulturePlaceSpiderMineSCBWResearch );
                    }
                    if (AITechCount(player, c_BWTU_Goliath, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWTR_GoliathSCBWRangeUpgrade );
                    }
                    AISetStock( player, 1, c_BWTR_TerranVehicleWeaponsSCBW_Lvl1 );
                    AISetStock( player, 1, c_BWTR_TerranVehiclePlatingSCBW_Lvl1 );
                    AISetStock( player, 1, c_BWTR_TerranShipWeaponsSCBW_Lvl1 );
                    AISetStock( player, 1, c_BWTR_TerranShipPlatingSCBW_Lvl1 );

                }
            }
        }
    }
    else {  // (buildType == e_buildType_Air) 


        if (phase >= c_ldPhaseMid) {


            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_BWTR_TerranShipWeaponsSCBW_Lvl1 );
                AISetStock( player, 1, c_BWTR_TerranShipPlatingSCBW_Lvl1 );

                if (phase >= c_ldPhaseFinal) {

                    if (AITechCount(player, c_BWTU_Battlecruiser, c_techCountInProgressOrBetter) >= 2) {
                        AISetStock( player, 1, c_BWTR_BattlecruiserSCBWYamatoResearch );
                    }
                    AISetStock( player, 1, c_BWTR_TerranShipWeaponsSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWTR_TerranShipPlatingSCBW_Lvl3 );
                    if (AITechCount(player, c_BWTU_ScienceVessel, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWTR_ScienceVesselSCBWEMPShockwaveResearch );
                    }
                    if (AITechCount(player, c_BWTU_Wraith, c_techCountInProgressOrBetter) >= 3) {
                        AISetStock( player, 1, c_BWTR_WraithSCBWCloakResearch );
                    }
                    if (AITechCount(player, c_BWTU_ScienceVessel, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWTR_ScienceVesselSCBWEnergyUpgrade );
                    }
                    if (AITechCount(player, c_BWTU_Battlecruiser, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWTR_BattlecruiserSCBWEnergyUpgrade );
                    }
                    if (AITechCount(player, c_BWTU_Marine, c_techCountInProgressOrBetter) >= 8) {
                        AISetStock( player, 1, c_BWTR_StimpackSCBWResearch );
                    }
                    if (AITechCount(player, c_BWTU_Marine, c_techCountInProgressOrBetter) >= 8) {
                        AISetStock( player, 1, c_BWTR_MarineSCBWRangeUpgrade );
                    }
                    AISetStock( player, 1, c_BWTR_TerranInfantryWeaponsSCBW_Lvl2 );
                    AISetStock( player, 1, c_BWTR_TerranInfantryArmorsSCBW_Lvl2 );

                }
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  BWTerranOpenArmyInitMedi
//--------------------------------------------------------------------------------------------------
int BWTerranOpenArmyInitMedi (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 8 foodCost and 440 resCost after about 356 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTB_Barracks, 2);
            AIAddToStockArmy(player, c_BWTU_Marine, 4);
            AIAddToStockArmy(player, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 1);
            // validation: 9 units above with average cost 8 food and 437 resources
            duration = 355 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTB_Factory, 1);
            AIAddToStockArmy(player, c_BWTU_Marine, 3);
            AIAddToStockArmy(player, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_Vulture, 2);
            // validation: 7 units above with average cost 9 food and 475 resources
            duration = 378 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 11 foodCost and 660 resCost after about 412 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Marine, 4);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 2);
            // validation: 10 units above with average cost 12 food and 674 resources
            duration = 425 + RandomInt(-14, 21);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 5);
            AIAddToStockArmy(player, c_BWTU_Vulture, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Vulture, 1);
            // validation: 10 units above with average cost 13 food and 650 resources
            duration = 428 + RandomInt(-14, 21);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 15 foodCost and 900 resCost after about 525 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Marine, 7);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 1);
            // validation: 14 units above with average cost 17 food and 949 resources
            duration = 554 + RandomInt(-18, 27);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 4);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmy(player, c_BWTU_Vulture, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Vulture, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Vulture, 1);
            // validation: 13 units above with average cost 18 food and 950 resources
            duration = 563 + RandomInt(-18, 28);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 8 foodCost and 480 resCost after about 225 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Marine, 3);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 2);
            // validation: 7 units above with average cost 9 food and 512 resources
            duration = 238 + RandomInt(-7, 11);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 3);
            AIAddToStockArmy(player, c_BWTU_Vulture, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Vulture, 1);
            // validation: 7 units above with average cost 9 food and 450 resources
            duration = 226 + RandomInt(-7, 11);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 9 foodCost and 900 resCost after about 543 seconds
        AIAddToStockArmy(player, c_BWTU_Wraith, 2);
        AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
        // validation: 4 units above with average cost 10 food and 950 resources
        duration = 570 + RandomInt(-19, 28);
    }
    else {
        return BWTerranOpenArmyInitMedi(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWTerranOpenInitMedi
//--------------------------------------------------------------------------------------------------
void BWTerranOpenInitMedi (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseOpen, BWTerranOpenArmyInitMedi);

    AISetMainState(player, e_mainState_Open, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWTerranOpenBuildMedi
//--------------------------------------------------------------------------------------------------
void BWTerranOpenBuildMedi (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Open, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    if (buildType == e_buildType_Rush) {
        AISetStock( player, 1, c_BWTB_CommandCenter );
        AISetStock( player, 11, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_SupplyDepot );
        AISetStock( player, 13, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_Barracks );
        AISetStock( player, 14, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_Refinery );
        AISetStock( player, 15, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTU_Marine );
        AISetStock( player, 1, c_BWTB_ComsatStation );
        AISetStock( player, 2, c_BWTB_SupplyDepot );
        AISetStock( player, 2, c_BWTU_Marine );
        AISetStockFarms( player, c_BWTB_SupplyDepot, c_stockNormalFarms);
    }
    else if (buildType == e_buildType_Timing) {
        AISetStock( player, 1, c_BWTB_CommandCenter );
        AISetStock( player, 11, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_SupplyDepot );
        AISetStock( player, 13, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_Barracks );
        AISetStock( player, 14, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_Refinery );
        AISetStock( player, 15, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTU_Marine );
        AISetStock( player, 1, c_BWTB_ComsatStation );
        AISetStock( player, 2, c_BWTB_SupplyDepot );
        AISetStock( player, 2, c_BWTU_Marine );
        AISetStockFarms( player, c_BWTB_SupplyDepot, c_stockNormalFarms);
        AISetStock( player, 2, c_BWTB_Barracks );
        AISetStock( player, 1, c_BWTB_Academy );
        AISetStock( player, 2, c_BWTB_Refinery );
    }
    else if (buildType == e_buildType_Power) {
        AISetStock( player, 1, c_BWTB_CommandCenter );
        AISetStock( player, 11, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_SupplyDepot );
        AISetStock( player, 13, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_Barracks );
        AISetStock( player, 14, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_Refinery );
        AISetStock( player, 15, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTU_Marine );
        AISetStock( player, 1, c_BWTB_ComsatStation );
        AISetStock( player, 2, c_BWTB_SupplyDepot );
        AISetStock( player, 2, c_BWTU_Marine );
        AISetStockFarms( player, c_BWTB_SupplyDepot, c_stockNormalFarms);
        AISetStock( player, 2, c_BWTB_Barracks );
        AISetStock( player, 1, c_BWTB_Academy );
        AISetStock( player, 2, c_BWTB_Refinery );
    }
    else if (buildType == e_buildType_Macro) {
        AISetStock( player, 1, c_BWTB_CommandCenter );
        AISetStock( player, 11, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_SupplyDepot );
        AISetStock( player, 13, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_Barracks );
        AISetStock( player, 15, c_BWTU_SCV );
        if (BWTerranMacroExpand(player)) { return; }
        AISetStock( player, 1, c_BWTU_Marine );
        AISetStock( player, 1, c_BWTB_ComsatStation );
        AISetStock( player, 2, c_BWTB_SupplyDepot );
        AISetStock( player, 2, c_BWTU_Marine );
        AISetStock( player, 1, c_BWTB_Refinery );
        AISetStockUnitNext( player, 21, c_BWTU_SCV, c_stockIdle );
        AISetStockFarms( player, c_BWTB_SupplyDepot, c_stockNormalFarms);
        AISetStock( player, 2, c_BWTB_Barracks );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStock( player, 2, c_BWTB_Refinery );
    }
    else if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWTB_CommandCenter );
        AISetStock( player, 11, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_SupplyDepot );
        AISetStock( player, 13, c_BWTU_SCV );
        if (BWTerranMacroExpand(player)) { return; }
        AISetStock( player, 1, c_BWTB_Refinery );
        AISetStock( player, 1, c_BWTB_Barracks );
        AISetStock( player, 14, c_BWTU_SCV );
        AISetStock( player, 2, c_BWTB_Refinery );
        AISetStock( player, 15, c_BWTU_SCV );
        AISetStock( player, 2, c_BWTB_SupplyDepot );
        AISetStock( player, 1, c_BWTB_Factory );
        AISetStock( player, 1, c_BWTB_ComsatStation );
        AISetStockUnitNext( player, 21, c_BWTU_SCV, c_stockIdle );
        AISetStockFarms( player, c_BWTB_SupplyDepot, c_stockNormalFarms);
        AISetStock( player, 2, c_BWTB_Starport );
        AISetStock( player, 2, c_BWTB_ControlTower );
    }

    BWTerranBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWTerranGeneralBuild(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 0.70);

    BWTerranUpgradesMedi(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 21, c_BWTU_SCV);

    BWTerranTechUp(player, c_ldPhaseOpen);

    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWTU_Dropship );
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Mid, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  BWTerranMidArmyInitMedi
//--------------------------------------------------------------------------------------------------
int BWTerranMidArmyInitMedi (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 16 foodCost and 960 resCost after about 320 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Firebat, 6);
            // validation: 12 units above with average cost 16 food and 900 resources
            duration = 312 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 6);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            // validation: 11 units above with average cost 17 food and 1075 resources
            duration = 340 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 20 foodCost and 1200 resCost after about 350 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            // validation: 14 units above with average cost 18 food and 1150 resources
            duration = 336 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 6);
            AIAddToStockArmy(player, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 1);
            // validation: 12 units above with average cost 20 food and 1350 resources
            duration = 368 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 21 foodCost and 1260 resCost after about 370 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWTU_Marine, 10);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            // validation: 16 units above with average cost 20 food and 1250 resources
            duration = 365 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            // validation: 14 units above with average cost 22 food and 1450 resources
            duration = 397 + RandomInt(-13, 19);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 29 foodCost and 1740 resCost after about 543 seconds
        // note: mid macro build did not send opening attack at 225 time
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWTU_Marine, 10);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Firebat, 2, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Firebat, 2, c_BWTU_Medic, 2);
            AIAddToStockArmy(player, c_BWTU_Ghost, 1);
            AIAddToStockArmy(player, c_BWTU_Medic, 4);
            // validation: 21 units above with average cost 28 food and 2024 resources
            duration = 588 + RandomInt(-27, 40);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 1);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            // validation: 19 units above with average cost 28 food and 1999 resources
            duration = 584 + RandomInt(-26, 40);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 14 foodCost and 1300 resCost after about 350 seconds
        AIAddToStockArmy(player, c_BWTU_Wraith, 3);
        AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
        AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Valkyrie, c_BWTU_Wraith), 1);
        // validation: 6 units above with average cost 15 food and 1412 resources
        duration = 368 + RandomInt(-12, 18);
    }
    else {
        return BWTerranMidArmyInitMedi(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWTerranMidInitMedi
//--------------------------------------------------------------------------------------------------
void BWTerranMidInitMedi (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseMid, BWTerranMidArmyInitMedi);

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Mid, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWTerranMidBuildMedi
//--------------------------------------------------------------------------------------------------
void BWTerranMidBuildMedi (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Mid, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    BWTerranBasicEconomy(player, c_ldPhaseMid, 18);
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWTU_Dropship );
    }
    BWTerranBasicExpansion(player, c_ldPhaseMid, 5500, 1500);

    BWTerranBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWTerranGeneralBuild(player, c_ldPhaseMid);

    AILDStockWorkers( player, 21, c_BWTU_SCV);

    if (buildType == e_buildType_Rush) {
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
    }
    else if (buildType == e_buildType_Timing) {
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStock( player, 2, c_BWTB_Factory );
        AISetStock( player, 2, c_BWTB_MachineShop );
    }
    else if (buildType == e_buildType_Power) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStock( player, 2, c_BWTB_Factory );
        AISetStock( player, 2, c_BWTB_MachineShop );
    }
    else if (buildType == e_buildType_Macro) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStock( player, 2, c_BWTB_Factory );
        AISetStock( player, 2, c_BWTB_MachineShop );
    }
    else if (buildType == e_buildType_Air) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStock( player, 2, c_BWTB_Starport );
        AISetStock( player, 2, c_BWTB_ControlTower );
    }

    if (AINeedsDetection(player)) {
        AISetStock( player, 1, c_BWTU_ScienceVessel );
        AISetStock( player, 1, c_BWTB_ComsatStation );
        AISetStock( player, 2, c_BWTB_MissileTurret );
    }

    AISetStockArmyScale(player, 0.70);

    AILDStockWorkers( player, 50, c_BWTU_SCV);

    BWTerranUpgradesMedi(player, c_ldPhaseMid);

    AISetStockArmyScale(player, 1.00);

    AISetStock( player, 2, c_BWTU_ScienceVessel );
    AISetStock( player, 1, c_BWTB_ComsatStation );

    BWTerranTechUp(player, c_ldPhaseMid);

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  BWTerranLateArmyInitMedi
//--------------------------------------------------------------------------------------------------
int BWTerranLateArmyInitMedi (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 29 foodCost and 1700 resCost after about 300 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Marine, 10);
            AIAddToStockArmy(player, c_BWTU_Firebat, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Firebat, 2, c_BWTU_Medic, 2);
            AIAddToStockArmy(player, c_BWTU_Ghost, 1);
            AIAddToStockArmy(player, c_BWTU_Medic, 4);
            // validation: 18 units above with average cost 24 food and 1737 resources
            duration = 290 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 12);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Firebat, 2, c_BWTU_Marine, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 1);
            // validation: 21 units above with average cost 29 food and 1787 resources
            duration = 306 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 32 foodCost and 1900 resCost after about 320 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Marine, 10);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 6);
            // validation: 16 units above with average cost 28 food and 2150 resources
            duration = 327 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 6);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, c_BWTU_Goliath, 6);
            // validation: 13 units above with average cost 31 food and 2375 resources
            duration = 350 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 35 foodCost and 2100 resCost after about 340 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWTU_Marine, 10);
            AIAddToStockArmy(player, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_Ghost, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Medic, 2);
            AIAddToStockArmy(player, c_BWTU_ScienceVessel, 1);
            // validation: 20 units above with average cost 26 food and 2450 resources
            duration = 341 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 6);
            AIAddToStockArmy(player, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 4, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, c_BWTU_ScienceVessel, 2);
            // validation: 18 units above with average cost 32 food and 2725 resources
            duration = 374 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 37 foodCost and 2300 resCost after about 360 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 12);
            AIAddToStockArmy(player, c_BWTU_Firebat, 8);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Marine, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 1);
            AIAddToStockArmy(player, c_BWTU_Medic, 4);
            // validation: 27 units above with average cost 39 food and 2775 resources
            duration = 395 + RandomInt(-13, 19);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_Wraith, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            // validation: 21 units above with average cost 35 food and 2675 resources
            duration = 379 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWTU_Marine, 6);
            AIAddToStockArmy(player, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 1);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Battlecruiser, c_BWTU_Goliath), 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Battlecruiser, c_BWTU_Goliath), 1);
            // validation: 16 units above with average cost 33 food and 2750 resources
            duration = 379 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 23 foodCost and 2300 resCost after about 320 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWTU_Wraith, 3);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Valkyrie, c_BWTU_Wraith), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Valkyrie, c_BWTU_Wraith), 2);
            // validation: 9 units above with average cost 22 food and 2125 resources
            duration = 307 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Wraith, 3);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
            AIAddToStockArmy(player, c_BWTU_Battlecruiser, 2);
            // validation: 7 units above with average cost 24 food and 2575 resources
            duration = 339 + RandomInt(-11, 16);
        }
    }
    else {
        return BWTerranLateArmyInitMedi(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWTerranFinalArmyInitMedi
//--------------------------------------------------------------------------------------------------
int BWTerranFinalArmyInitMedi (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 42 foodCost and 2700 resCost after about 280 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Marine, 20);
            AIAddToStockArmy(player, c_BWTU_Firebat, 6);
            AIAddToStockArmy(player, c_BWTU_Ghost, 2);
            AIAddToStockArmy(player, c_BWTU_Medic, 4);
            // validation: 30 units above with average cost 40 food and 2750 resources
            duration = 279 + RandomInt(-9, 13);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 24);
            AIAddToStockArmy(player, c_BWTU_Firebat, 6);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            // validation: 34 units above with average cost 46 food and 2750 resources
            duration = 288 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 45 foodCost and 2900 resCost after about 300 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Marine, 12);
            AIAddToStockArmy(player, c_BWTU_Vulture, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 8);
            AIAddToStockArmy(player, c_BWTU_Goliath, 3);
            // validation: 23 units above with average cost 46 food and 3500 resources
            duration = 327 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Vulture, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, c_BWTU_Goliath, 6);
            // validation: 18 units above with average cost 40 food and 2950 resources
            duration = 294 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 49 foodCost and 3200 resCost after about 320 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWTU_Marine, 16);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmy(player, c_BWTU_Medic, 2);
            AIAddToStockArmy(player, c_BWTU_Ghost, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Medic, 2);
            AIAddToStockArmy(player, c_BWTU_ScienceVessel, 1);
            // validation: 30 units above with average cost 40 food and 3500 resources
            duration = 318 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 12);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmy(player, c_BWTU_Ghost, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 4, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, c_BWTU_ScienceVessel, 2);
            // validation: 26 units above with average cost 44 food and 3625 resources
            duration = 329 + RandomInt(-10, 16);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 52 foodCost and 3500 resCost after about 340 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 16);
            AIAddToStockArmy(player, c_BWTU_Firebat, 12);
            AIAddToStockArmy(player, c_BWTU_Ghost, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            // validation: 36 units above with average cost 54 food and 3950 resources
            duration = 361 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
            AIAddToStockArmy(player, c_BWTU_Vulture, 3);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 4, c_BWTU_Goliath, 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Battlecruiser, c_BWTU_Goliath), 1);
            // validation: 27 units above with average cost 53 food and 4100 resources
            duration = 365 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWTU_Marine, 6);
            AIAddToStockArmy(player, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_Wraith, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Battlecruiser, c_BWTU_Goliath), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Battlecruiser, c_BWTU_Goliath), 2);
            // validation: 20 units above with average cost 50 food and 4450 resources
            duration = 375 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 32 foodCost and 3200 resCost after about 300 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 3);
            AIAddToStockArmy(player, c_BWTU_Wraith, 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Valkyrie, c_BWTU_Wraith), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Valkyrie, c_BWTU_Wraith), 2);
            AIAddToStockArmy(player, c_BWTU_Wraith, 2);
            // validation: 12 units above with average cost 31 food and 2975 resources
            duration = 289 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Wraith, 2);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 1);
            AIAddToStockArmy(player, c_BWTU_Battlecruiser, 4);
            // validation: 7 units above with average cost 31 food and 3500 resources
            duration = 309 + RandomInt(-10, 15);
        }
    }
    else {
        return BWTerranFinalArmyInitMedi(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWTerranLateInitMedi
//--------------------------------------------------------------------------------------------------
void BWTerranLateInitMedi (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int curPhase = c_ldPhaseLate;
    int buildType = 0;

    AIChooseNextLateGameBuild(player);
    buildType = AIGetUserInt(player, c_lateGameBuildType);

    if (lateLoop <= 0) { // First Late Loop
        AISetupNextArmy (player, buildType, curPhase, BWTerranLateArmyInitMedi);
    } else {
        curPhase = c_ldPhaseFinal + lateLoop;
        AISetupNextArmy (player, buildType, curPhase, BWTerranFinalArmyInitMedi);
    }

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsClearObs, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Late, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWTerranLateBuildMedi
//--------------------------------------------------------------------------------------------------
void BWTerranLateBuildMedi (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int buildType = AIGetUserInt(player, c_lateGameBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentLateGame(player)) {
        AISetMainState(player, e_mainState_Late, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    BWTerranBasicEconomy(player, c_ldPhaseLate, 18);
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWTU_Dropship );
    }
    BWTerranBasicExpansion(player, c_ldPhaseLate, 10000, 2500);

    BWTerranBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWTerranGeneralBuild(player, c_ldPhaseLate);

    AILDStockWorkers( player, 21, c_BWTU_SCV);

    if (buildType == e_buildType_Core) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_MachineShop, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_ControlTower, c_stockIdle );
    }
    else if (buildType == e_buildType_HighTech) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_MachineShop, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_ControlTower, c_stockIdle );
    }
    else if (buildType == e_buildType_Special) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_MachineShop, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_ControlTower, c_stockIdle );
    }
    else if (buildType == e_buildType_Mixed) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_MachineShop, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_ControlTower, c_stockIdle );
    }
    else if (buildType == e_buildType_Air) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_MachineShop, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_ControlTower, c_stockIdle );
    }

    AISetStock( player, 2, c_BWTU_ScienceVessel );
    AISetStock( player, 1, c_BWTB_ComsatStation );

    AISetStockArmyScale(player, 0.70);

    AISetStock( player, 1, c_BWTU_Dropship );
    AISetStock( player, 3, c_BWTU_Medic );
    AISetStock( player, 3, c_BWTU_ScienceVessel );
    AISetStock( player, 2, c_BWTB_MissileTurret );

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 50, c_BWTU_SCV);

    if (lateLoop <= 0) { // First Late Loop
        BWTerranUpgradesMedi(player, c_ldPhaseLate);
        BWTerranTechUp(player, c_ldPhaseLate);
    } else { // Remaining Loops
        BWTerranUpgradesMedi(player, c_ldPhaseFinal);
        BWTerranTechUp(player, c_ldPhaseFinal);
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
    if (nextState) {
        lateLoop += 1;
        AISetUserInt(player, c_ldNumLateLoops, lateLoop);
    }
}

//--------------------------------------------------------------------------------------------------
//  BWTerranOpenMedi
//--------------------------------------------------------------------------------------------------
void BWTerranOpenMedi (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWTerranOpenInitMedi(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWTerranOpenBuildMedi(player); }
    else { ErrorMeleeScript(player, "Invalid Open MainSubState BWTerranMedi"); }
}

//--------------------------------------------------------------------------------------------------
//  BWTerranMidMedi
//--------------------------------------------------------------------------------------------------
void BWTerranMidMedi (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWTerranMidInitMedi(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWTerranMidBuildMedi(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid MainSubState BWTerranMedi"); }
}

//--------------------------------------------------------------------------------------------------
//  BWTerranLateMedi
//--------------------------------------------------------------------------------------------------
void BWTerranLateMedi (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWTerranLateInitMedi(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWTerranLateBuildMedi(player);  }
    else { ErrorMeleeScript(player, "Invalid Late MainSubState BWTerranMedi"); }
}

