//==================================================================================================
//  BWTerran MediumHard Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  BWTerranUpgradesMdHd
//--------------------------------------------------------------------------------------------------
void BWTerranUpgradesMdHd (int player, int phase) {
    int buildType;

    if (phase < c_ldPhaseLate) {
        buildType = AIGetUserInt(player, c_openingBuildType);
    } else {
        buildType = AIGetUserInt(player, c_lateGameBuildType);
    }

    if (buildType != e_buildType_Air) {


        if (phase >= c_ldPhaseMid) {

            AISetStock( player, 1, c_BWTR_StimpackSCBWResearch );
            AISetStock( player, 1, c_BWTR_MarineSCBWRangeUpgrade );
            if (AITechCount(player, c_BWTU_Wraith, c_techCountInProgressOrBetter) >= 3) {
                AISetStock( player, 1, c_BWTR_WraithSCBWCloakResearch );
            }
            AISetStock( player, 1, c_BWTR_TerranInfantryWeaponsSCBW_Lvl1 );
            AISetStock( player, 1, c_BWTR_TerranInfantryArmorsSCBW_Lvl1 );

            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_BWTR_TerranInfantryWeaponsSCBW_Lvl2 );
                AISetStock( player, 1, c_BWTR_TerranInfantryArmorsSCBW_Lvl2 );
                if (AITechCount(player, c_BWTU_Vulture, c_techCountInProgressOrBetter) >= 4) {
                    AISetStock( player, 1, c_BWTR_VulturePlaceSpiderMineSCBWResearch );
                }
                if (AITechCount(player, c_BWTU_Goliath, c_techCountInProgressOrBetter) >= 4) {
                    AISetStock( player, 1, c_BWTR_GoliathSCBWRangeUpgrade );
                }
                if (AITechCount(player, c_BWTU_Ghost, c_techCountInProgressOrBetter) >= 3) {
                    AISetStock( player, 1, c_BWTR_GhostSCBWCloakResearch );
                }
                AISetStock( player, 1, c_BWTR_TerranVehicleWeaponsSCBW_Lvl1 );
                AISetStock( player, 1, c_BWTR_TerranVehiclePlatingSCBW_Lvl1 );
                AISetStock( player, 1, c_BWTR_TerranShipWeaponsSCBW_Lvl1 );
                AISetStock( player, 1, c_BWTR_TerranShipPlatingSCBW_Lvl1 );

                if (phase >= c_ldPhaseFinal) {

                    if (AITechCount(player, c_BWTU_Battlecruiser, c_techCountInProgressOrBetter) >= 2) {
                        AISetStock( player, 1, c_BWTR_BattlecruiserSCBWYamatoResearch );
                    }
                    AISetStock( player, 1, c_BWTR_TerranInfantryWeaponsSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWTR_TerranInfantryArmorsSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWTR_TerranVehicleWeaponsSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWTR_TerranVehiclePlatingSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWTR_TerranShipWeaponsSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWTR_TerranShipPlatingSCBW_Lvl3 );
                    if (AITechCount(player, c_BWTU_ScienceVessel, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWTR_ScienceVesselSCBWEMPShockwaveResearch );
                    }
                    if (AITechCount(player, c_BWTU_Wraith, c_techCountInProgressOrBetter) >= 3) {
                        AISetStock( player, 1, c_BWTR_WraithSCBWCloakResearch );
                    }

                    if (AITechCount(player, c_BWTU_ScienceVessel, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWTR_ScienceVesselSCBWEnergyUpgrade );
                    }
                    if (AITechCount(player, c_BWTU_Battlecruiser, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWTR_BattlecruiserSCBWEnergyUpgrade );
                    }

                }
            }
        }
    }
    else {  // (buildType == e_buildType_Air) 


        if (phase >= c_ldPhaseMid) {
            if (AITechCount(player, c_BWTU_Wraith, c_techCountInProgressOrBetter) >= 3) {
                AISetStock( player, 1, c_BWTR_WraithSCBWCloakResearch );
            }
            AISetStock( player, 1, c_BWTR_TerranShipPlatingSCBW_Lvl1 );
            AISetStock( player, 1, c_BWTR_TerranShipPlatingSCBW_Lvl1 );

            if (phase >= c_ldPhaseLate) {

                if (AITechCount(player, c_BWTU_Battlecruiser, c_techCountInProgressOrBetter) >= 2) {
                    AISetStock( player, 1, c_BWTR_BattlecruiserSCBWYamatoResearch );
                }
                AISetStock( player, 1, c_BWTR_TerranShipWeaponsSCBW_Lvl2 );
                AISetStock( player, 1, c_BWTR_TerranShipPlatingSCBW_Lvl2 );
                if (AITechCount(player, c_BWTU_Marine, c_techCountInProgressOrBetter) >= 8) {
                    AISetStock( player, 1, c_BWTR_StimpackSCBWResearch );
                }
                if (AITechCount(player, c_BWTU_Marine, c_techCountInProgressOrBetter) >= 8) {
                    AISetStock( player, 1, c_BWTR_MarineSCBWRangeUpgrade );
                }

                if (phase >= c_ldPhaseFinal) {

                    AISetStock( player, 1, c_BWTR_TerranShipWeaponsSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWTR_TerranShipPlatingSCBW_Lvl3 );
                    if (AITechCount(player, c_BWTU_ScienceVessel, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWTR_ScienceVesselSCBWEMPShockwaveResearch );
                    }
                    if (AITechCount(player, c_BWTU_SiegeTank, c_techCountInProgressOrBetter) >= 2) {
                        AISetStock( player, 1, c_BWTR_SiegeModeSCBWResearch );
                    }
                    if (AITechCount(player, c_BWTU_Wraith, c_techCountInProgressOrBetter) >= 3) {
                        AISetStock( player, 1, c_BWTR_WraithSCBWEnergyUpgrade );
                    }
                    if (AITechCount(player, c_BWTU_ScienceVessel, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWTR_ScienceVesselSCBWEnergyUpgrade );
                    }
                    if (AITechCount(player, c_BWTU_Battlecruiser, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWTR_BattlecruiserSCBWEnergyUpgrade );
                    }
                    AISetStock( player, 1, c_BWTR_TerranInfantryWeaponsSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWTR_TerranInfantryArmorsSCBW_Lvl3 );
                    if (AITechCount(player, c_BWTU_Vulture, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWTR_VulturePlaceSpiderMineSCBWResearch );
                    }
                    if (AITechCount(player, c_BWTU_Goliath, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWTR_GoliathSCBWRangeUpgrade );
                    }
                    if (AITechCount(player, c_BWTU_Ghost, c_techCountInProgressOrBetter) >= 3) {
                        AISetStock( player, 1, c_BWTR_GhostSCBWCloakResearch );
                    }
                    if (AITechCount(player, c_BWTU_Vulture, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWTR_VultureSCBWSpeedUpgrade );
                    }
                    if (AITechCount(player, c_BWTU_Ghost, c_techCountInProgressOrBetter) >= 3) {
                        AISetStock( player, 1, c_BWTR_GhostSCBWLockdownResearch );
                    }
                }
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  BWTerranOpenArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int BWTerranOpenArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 11 foodCost and 560 resCost after about 337 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTB_Barracks, 2);
            AIAddToStockArmy(player, c_BWTU_Marine, 5);
            AIAddToStockArmy(player, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 2);
            // validation: 11 units above with average cost 11 food and 612 resources
            duration = 350 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTB_Factory, 1);
            AIAddToStockArmy(player, c_BWTU_Marine, 5);
            AIAddToStockArmy(player, c_BWTU_Vulture, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Vulture, 1);
            // validation: 10 units above with average cost 11 food and 550 resources
            duration = 335 + RandomInt(-11, 16);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 15 foodCost and 880 resCost after about 393 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Marine, 7);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 1);
            // validation: 14 units above with average cost 17 food and 949 resources
            duration = 418 + RandomInt(-13, 20);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 5);
            AIAddToStockArmy(player, c_BWTU_Vulture, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Vulture, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Vulture, 1);
            // validation: 13 units above with average cost 17 food and 850 resources
            duration = 400 + RandomInt(-13, 20);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 20 foodCost and 1200 resCost after about 506 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Marine, 10);
            AIAddToStockArmy(player, c_BWTU_Medic, 1);
            AIAddToStockArmy(player, c_BWTU_Firebat, 5);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 1);
            // validation: 18 units above with average cost 22 food and 1224 resources
            duration = 522 + RandomInt(-17, 26);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 6);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmy(player, c_BWTU_Vulture, 5);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Vulture, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Vulture, 1);
            // validation: 17 units above with average cost 24 food and 1250 resources
            duration = 540 + RandomInt(-18, 27);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 11 foodCost and 620 resCost after about 225 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Marine, 4);
            AIAddToStockArmy(player, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 2);
            // validation: 10 units above with average cost 12 food and 674 resources
            duration = 238 + RandomInt(-7, 11);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 5);
            AIAddToStockArmy(player, c_BWTU_Vulture, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Vulture, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Vulture, 1);
            // validation: 11 units above with average cost 13 food and 650 resources
            duration = 239 + RandomInt(-7, 11);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 12 foodCost and 1200 resCost after about 525 seconds
        AIAddToStockArmy(player, c_BWTU_Wraith, 3);
        AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
        // validation: 5 units above with average cost 13 food and 1200 resources
        duration = 535 + RandomInt(-17, 26);
    }
    else {
        return BWTerranOpenArmyInitMdHd(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWTerranOpenInitMdHd
//--------------------------------------------------------------------------------------------------
void BWTerranOpenInitMdHd (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseOpen, BWTerranOpenArmyInitMdHd);

    AISetMainState(player, e_mainState_Open, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWTerranOpenBuildMdHd
//--------------------------------------------------------------------------------------------------
void BWTerranOpenBuildMdHd (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Open, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    if (buildType == e_buildType_Rush) {
        AISetStock( player, 1, c_BWTB_CommandCenter );
        AISetStock( player, 11, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_SupplyDepot );
        AISetStock( player, 13, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_Barracks );
        AISetStock( player, 14, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_Refinery );
        AISetStock( player, 16, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTU_Marine );
        AISetStock( player, 1, c_BWTB_ComsatStation );
        AISetStock( player, 2, c_BWTB_SupplyDepot );
        AISetStock( player, 2, c_BWTU_Marine );
        AISetStockUnitNext( player, 17, c_BWTU_SCV, c_stockIdle );
        AISetStockFarms( player, c_BWTB_SupplyDepot, c_stockNormalFarms);
    }
    else if (buildType == e_buildType_Timing) {
        AISetStock( player, 1, c_BWTB_CommandCenter );
        AISetStock( player, 11, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_SupplyDepot );
        AISetStock( player, 13, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_Barracks );
        AISetStock( player, 14, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_Refinery );
        AISetStock( player, 16, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTU_Marine );
        AISetStock( player, 1, c_BWTB_ComsatStation );
        AISetStock( player, 2, c_BWTB_SupplyDepot );
        AISetStock( player, 2, c_BWTU_Marine );
        AISetStockUnitNext( player, 17, c_BWTU_SCV, c_stockIdle );
        AISetStockFarms( player, c_BWTB_SupplyDepot, c_stockNormalFarms);
        AISetStock( player, 2, c_BWTB_Barracks );
        AISetStock( player, 1, c_BWTB_Academy );
        AISetStock( player, 2, c_BWTB_Refinery );
    }
    else if (buildType == e_buildType_Power) {
        AISetStock( player, 1, c_BWTB_CommandCenter );
        AISetStock( player, 11, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_SupplyDepot );
        AISetStock( player, 13, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_Barracks );
        AISetStock( player, 14, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_Refinery );
        AISetStock( player, 16, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTU_Marine );
        AISetStock( player, 1, c_BWTB_ComsatStation );
        AISetStock( player, 2, c_BWTB_SupplyDepot );
        AISetStock( player, 2, c_BWTU_Marine );
        AISetStockUnitNext( player, 17, c_BWTU_SCV, c_stockIdle );
        AISetStockFarms( player, c_BWTB_SupplyDepot, c_stockNormalFarms);
        AISetStock( player, 2, c_BWTB_Barracks );
        AISetStock( player, 1, c_BWTB_Academy );
        AISetStock( player, 2, c_BWTB_Refinery );
    }
    else if (buildType == e_buildType_Macro) {
        AISetStock( player, 1, c_BWTB_CommandCenter );
        AISetStock( player, 11, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_SupplyDepot );
        AISetStock( player, 13, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_Barracks );
        AISetStock( player, 15, c_BWTU_SCV );
        if (BWTerranMacroExpand(player)) { return; }
        AISetStock( player, 1, c_BWTU_Marine );
        AISetStock( player, 1, c_BWTB_ComsatStation );
        AISetStock( player, 2, c_BWTB_SupplyDepot );
        AISetStock( player, 2, c_BWTU_Marine );
        AISetStock( player, 1, c_BWTB_Refinery );
        AISetStockUnitNext( player, 23, c_BWTU_SCV, c_stockIdle );
        AISetStockFarms( player, c_BWTB_SupplyDepot, c_stockNormalFarms);
        AISetStock( player, 2, c_BWTB_Barracks );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStock( player, 2, c_BWTB_Refinery );
    }
    else if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWTB_CommandCenter );
        AISetStock( player, 11, c_BWTU_SCV );
        AISetStock( player, 1, c_BWTB_SupplyDepot );
        AISetStock( player, 13, c_BWTU_SCV );
        if (BWTerranMacroExpand(player)) { return; }
        AISetStock( player, 1, c_BWTB_Refinery );
        AISetStock( player, 1, c_BWTB_Barracks );
        AISetStock( player, 14, c_BWTU_SCV );
        AISetStock( player, 2, c_BWTB_Refinery );
        AISetStock( player, 16, c_BWTU_SCV );
        AISetStock( player, 2, c_BWTB_SupplyDepot );
        AISetStock( player, 1, c_BWTB_Factory );
        AISetStock( player, 1, c_BWTB_ComsatStation );
        AISetStockUnitNext( player, 13, c_BWTU_SCV, c_stockIdle );
        AISetStockFarms( player, c_BWTB_SupplyDepot, c_stockNormalFarms);
        AISetStock( player, 2, c_BWTB_Starport );
        AISetStock( player, 2, c_BWTB_ControlTower );
    }

    BWTerranBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWTerranGeneralBuild(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 0.70);

    BWTerranUpgradesMdHd(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 23, c_BWTU_SCV);

    BWTerranTechUp(player, c_ldPhaseOpen);

    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWTU_Dropship );
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Mid, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  BWTerranMidArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int BWTerranMidArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 20 foodCost and 1200 resCost after about 300 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Firebat, 7);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Firebat, 2, c_BWTU_Medic, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Firebat, 2, c_BWTU_Medic, 2);
            // validation: 17 units above with average cost 22 food and 1349 resources
            duration = 323 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 6);
            AIAddToStockArmy(player, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            // validation: 12 units above with average cost 20 food and 1350 resources
            duration = 315 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 25 foodCost and 1500 resCost after about 330 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 10);
            AIAddToStockArmy(player, c_BWTU_Firebat, 6);
            AIAddToStockArmy(player, c_BWTU_Medic, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            // validation: 18 units above with average cost 24 food and 1500 resources
            duration = 327 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Firebat, 3);
            AIAddToStockArmy(player, c_BWTU_Medic, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            // validation: 15 units above with average cost 24 food and 1575 resources
            duration = 333 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWTU_Marine, 6);
            AIAddToStockArmy(player, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_Medic, 3);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Wraith, 2, c_BWTU_Goliath, 3);
            // validation: 14 units above with average cost 25 food and 1800 resources
            duration = 357 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 26 foodCost and 1580 resCost after about 350 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 12);
            AIAddToStockArmy(player, c_BWTU_Firebat, 6);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            // validation: 20 units above with average cost 26 food and 1600 resources
            duration = 351 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 9);
            AIAddToStockArmy(player, c_BWTU_Firebat, 3);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            // validation: 16 units above with average cost 25 food and 1625 resources
            duration = 350 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWTU_Marine, 7);
            AIAddToStockArmy(player, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 1);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Wraith, 2, c_BWTU_Goliath, 3);
            // validation: 15 units above with average cost 26 food and 1850 resources
            duration = 374 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 36 foodCost and 2200 resCost after about 525 seconds
        // note: mid macro build did not send opening attack at 225 time
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 12);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmy(player, c_BWTU_Medic, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Firebat, 1, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Firebat, 1, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_Ghost, 2);
            // validation: 24 units above with average cost 32 food and 2424 resources
            duration = 535 + RandomInt(-25, 38);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 10);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Marine, 2, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_Vulture, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 3);
            // validation: 23 units above with average cost 35 food and 2349 resources
            duration = 540 + RandomInt(-25, 38);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Firebat, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Firebat, 2, c_BWTU_Medic, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Firebat, 2, c_BWTU_Marine, 2);
            AIAddToStockArmy(player, c_BWTU_Ghost, 1);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Wraith, 2, c_BWTU_Goliath, 3);
            // validation: 22 units above with average cost 35 food and 2649 resources
            duration = 583 + RandomInt(-26, 40);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 18 foodCost and 1800 resCost after about 330 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 3);
            AIAddToStockArmy(player, c_BWTU_Wraith, 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Valkyrie, c_BWTU_Wraith), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Valkyrie, c_BWTU_Wraith), 1);
            // validation: 8 units above with average cost 20 food and 1887 resources
            duration = 345 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWTU_Marine, 6);
            AIAddToStockArmy(player, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
            AIAddToStockArmy(player, c_BWTU_Wraith, 3);
            // validation: 11 units above with average cost 22 food and 1750 resources
            duration = 344 + RandomInt(-11, 17);
        }
    }
    else {
        return BWTerranMidArmyInitMdHd(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWTerranMidInitMdHd
//--------------------------------------------------------------------------------------------------
void BWTerranMidInitMdHd (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseMid, BWTerranMidArmyInitMdHd);

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Mid, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWTerranMidBuildMdHd
//--------------------------------------------------------------------------------------------------
void BWTerranMidBuildMdHd (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Mid, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    BWTerranBasicEconomy(player, c_ldPhaseMid, 20);
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWTU_Dropship );
    }
    BWTerranBasicExpansion(player, c_ldPhaseMid, 5500, 1500);

    BWTerranBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWTerranGeneralBuild(player, c_ldPhaseMid);

    AILDStockWorkers( player, 23, c_BWTU_SCV);

    if (buildType == e_buildType_Rush) {
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_MachineShop, c_stockIdle );
    }
    else if (buildType == e_buildType_Timing) {
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStock( player, 2, c_BWTB_Factory );
        AISetStock( player, 2, c_BWTB_MachineShop );
        AISetStock( player, 2, c_BWTB_Starport );
        AISetStock( player, 2, c_BWTB_ControlTower );
    }
    else if (buildType == e_buildType_Power) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStock( player, 2, c_BWTB_Factory );
        AISetStock( player, 2, c_BWTB_MachineShop );
        AISetStock( player, 2, c_BWTB_Starport );
        AISetStock( player, 2, c_BWTB_ControlTower );
    }
    else if (buildType == e_buildType_Macro) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStock( player, 2, c_BWTB_Factory );
        AISetStock( player, 2, c_BWTB_MachineShop );
        AISetStock( player, 2, c_BWTB_Starport );
        AISetStock( player, 2, c_BWTB_ControlTower );
    }
    else if (buildType == e_buildType_Air) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStock( player, 2, c_BWTB_Starport );
        AISetStock( player, 2, c_BWTB_ControlTower );
    }

    if (AINeedsDetection(player)) {
        AISetStock( player, 1, c_BWTU_ScienceVessel );
        AISetStock( player, 1, c_BWTB_ComsatStation );
        AISetStock( player, 2, c_BWTB_MissileTurret );
    }

    AISetStockArmyScale(player, 0.70);

    AILDStockWorkers( player, 52, c_BWTU_SCV);

    BWTerranUpgradesMdHd(player, c_ldPhaseMid);

    AISetStockArmyScale(player, 1.00);

    AISetStock( player, 2, c_BWTU_ScienceVessel );
    AISetStock( player, 1, c_BWTB_ComsatStation );

    BWTerranTechUp(player, c_ldPhaseMid);

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  BWTerranLateArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int BWTerranLateArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 36 foodCost and 2200 resCost after about 280 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Marine, 16);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmy(player, c_BWTU_Medic, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Firebat, 2, c_BWTU_Medic, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Firebat, 2, c_BWTU_Marine, 2);
            AIAddToStockArmy(player, c_BWTU_Ghost, 1);
            // validation: 27 units above with average cost 34 food and 2324 resources
            duration = 282 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 14);
            AIAddToStockArmy(player, c_BWTU_Firebat, 6);
            AIAddToStockArmy(player, c_BWTU_Medic, 4);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            // validation: 26 units above with average cost 40 food and 2650 resources
            duration = 311 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWTU_Marine, 12);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmy(player, c_BWTU_Medic, 4);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Wraith, 2, c_BWTU_Goliath, 3);
            // validation: 23 units above with average cost 37 food and 2525 resources
            duration = 299 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 39 foodCost and 2400 resCost after about 300 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Vulture, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 8);
            // validation: 18 units above with average cost 36 food and 2800 resources
            duration = 315 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 5);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, c_BWTU_Goliath, 6);
            // validation: 17 units above with average cost 39 food and 3025 resources
            duration = 332 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, c_BWTU_Goliath, 3);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 4);
            AIAddToStockArmy(player, c_BWTU_Wraith, 2);
            // validation: 19 units above with average cost 38 food and 3125 resources
            duration = 335 + RandomInt(-11, 16);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 41 foodCost and 2600 resCost after about 320 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWTU_Marine, 12);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmy(player, c_BWTU_Medic, 3);
            AIAddToStockArmy(player, c_BWTU_Ghost, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_Dropship, 1);
            AIAddToStockArmy(player, c_BWTU_ScienceVessel, 2);
            // validation: 25 units above with average cost 36 food and 3350 resources
            duration = 348 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Ghost, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 4, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, c_BWTU_ScienceVessel, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Goliath, 3, c_BWTU_Valkyrie, 2);
            // validation: 19 units above with average cost 35 food and 3200 resources
            duration = 339 + RandomInt(-11, 16);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 44 foodCost and 2800 resCost after about 340 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 16);
            AIAddToStockArmy(player, c_BWTU_Firebat, 8);
            AIAddToStockArmy(player, c_BWTU_Ghost, 2);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
            AIAddToStockArmy(player, c_BWTU_Medic, 7);
            // validation: 31 units above with average cost 46 food and 3450 resources
            duration = 376 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 10);
            AIAddToStockArmy(player, c_BWTU_Firebat, 6);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Wraith, 3, c_BWTU_Goliath, 3);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            // validation: 25 units above with average cost 45 food and 3275 resources
            duration = 365 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 1);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Wraith, c_BWTU_Valkyrie), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Battlecruiser, c_BWTU_Goliath), 2);
            // validation: 21 units above with average cost 42 food and 3300 resources
            duration = 361 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 28 foodCost and 2800 resCost after about 300 seconds
        armyRoll = RandomInt(1,7);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Wraith, 3);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Valkyrie, c_BWTU_Wraith), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Valkyrie, c_BWTU_Wraith), 2);
            AIAddToStockArmy(player, c_BWTU_Battlecruiser, 1);
            // validation: 10 units above with average cost 28 food and 2825 resources
            duration = 301 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
            AIAddToStockArmy(player, c_BWTU_Wraith, 2);
            AIAddToStockArmy(player, c_BWTU_Battlecruiser, 3);
            // validation: 7 units above with average cost 28 food and 3050 resources
            duration = 311 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Goliath, 3);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 1);
            AIAddToStockArmy(player, c_BWTU_Wraith, 2);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
            AIAddToStockArmy(player, c_BWTU_Battlecruiser, 1);
            // validation: 15 units above with average cost 34 food and 2925 resources
            duration = 321 + RandomInt(-10, 16);
        }
    }
    else {
        return BWTerranLateArmyInitMdHd(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWTerranFinalArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int BWTerranFinalArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 49 foodCost and 3200 resCost after about 260 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Marine, 28);
            AIAddToStockArmy(player, c_BWTU_Firebat, 8);
            AIAddToStockArmy(player, c_BWTU_Ghost, 2);
            AIAddToStockArmy(player, c_BWTU_Medic, 7);
            // validation: 41 units above with average cost 54 food and 3600 resources
            duration = 280 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 20);
            AIAddToStockArmy(player, c_BWTU_Firebat, 6);
            AIAddToStockArmy(player, c_BWTU_Ghost, 2);
            AIAddToStockArmy(player, c_BWTU_Medic, 4);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            // validation: 35 units above with average cost 53 food and 3825 resources
            duration = 286 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWTU_Marine, 16);
            AIAddToStockArmy(player, c_BWTU_Firebat, 6);
            AIAddToStockArmy(player, c_BWTU_Medic, 4);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Wraith, c_BWTU_Valkyrie), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Battlecruiser, c_BWTU_Goliath), 1);
            // validation: 31 units above with average cost 54 food and 3900 resources
            duration = 290 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 52 foodCost and 3500 resCost after about 280 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Marine, 12);
            AIAddToStockArmy(player, c_BWTU_Vulture, 4);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 8);
            AIAddToStockArmy(player, c_BWTU_Goliath, 3);
            // validation: 25 units above with average cost 50 food and 3700 resources
            duration = 283 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 10);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 6);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, c_BWTU_Goliath, 9);
            // validation: 21 units above with average cost 50 food and 3900 resources
            duration = 290 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 2, c_BWTU_Goliath, 1);
            AIAddToStockArmy(player, c_BWTU_Goliath, 5);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 4);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Wraith, c_BWTU_Valkyrie), 2);
            // validation: 22 units above with average cost 50 food and 4200 resources
            duration = 300 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 56 foodCost and 3800 resCost after about 300 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWTU_Marine, 16);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmy(player, c_BWTU_Medic, 3);
            AIAddToStockArmy(player, c_BWTU_Ghost, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Medic, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Ghost, 1, c_BWTU_Marine, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 4, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, c_BWTU_ScienceVessel, 2);
            // validation: 34 units above with average cost 49 food and 4300 resources
            duration = 307 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 12);
            AIAddToStockArmy(player, c_BWTU_Firebat, 4);
            AIAddToStockArmy(player, c_BWTU_Ghost, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 4, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, c_BWTU_ScienceVessel, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Goliath, 3, c_BWTU_Valkyrie, 2);
            // validation: 27 units above with average cost 47 food and 3900 resources
            duration = 292 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 60 foodCost and 4100 resCost after about 320 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWTU_Marine, 20);
            AIAddToStockArmy(player, c_BWTU_Firebat, 16);
            AIAddToStockArmy(player, c_BWTU_Ghost, 2);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            // validation: 42 units above with average cost 66 food and 4600 resources
            duration = 344 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWTU_Marine, 10);
            AIAddToStockArmy(player, c_BWTU_Firebat, 6);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
            AIAddToStockArmy(player, c_BWTU_Vulture, 4);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 4, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Valkyrie, c_BWTU_Wraith), 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Battlecruiser, c_BWTU_Goliath), 2);
            // validation: 31 units above with average cost 65 food and 4862 resources
            duration = 351 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWTU_Marine, 8);
            AIAddToStockArmy(player, c_BWTU_Firebat, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Firebat, 1, c_BWTU_Marine, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Firebat, 1, c_BWTU_Firebat, 2);
            AIAddToStockArmy(player, c_BWTU_SiegeTank, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWTU_Vulture, 4, c_BWTU_Goliath, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Valkyrie, c_BWTU_Wraith), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Battlecruiser, c_BWTU_Goliath), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Battlecruiser, c_BWTU_Goliath), 2);
            // validation: 26 units above with average cost 60 food and 5024 resources
            duration = 350 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 38 foodCost and 3800 resCost after about 280 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 4);
            AIAddToStockArmy(player, c_BWTU_Wraith, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWTU_Valkyrie, c_BWTU_Wraith), 2);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
            AIAddToStockArmy(player, c_BWTU_Battlecruiser, 2);
            // validation: 12 units above with average cost 37 food and 3875 resources
            duration = 280 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 2);
            AIAddToStockArmy(player, c_BWTU_Wraith, 1);
            AIAddToStockArmy(player, c_BWTU_Battlecruiser, 5);
            // validation: 8 units above with average cost 37 food and 4200 resources
            duration = 290 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWTU_Marine, 16);
            AIAddToStockArmy(player, c_BWTU_Goliath, 6);
            AIAddToStockArmy(player, c_BWTU_Valkyrie, 1);
            AIAddToStockArmy(player, c_BWTU_Wraith, 2);
            AIAddToStockArmy(player, c_BWTU_Wraith, 2);
            AIAddToStockArmy(player, c_BWTU_Battlecruiser, 1);
            // validation: 24 units above with average cost 48 food and 3825 resources
            duration = 299 + RandomInt(-9, 14);
        }
    }
    else {
        return BWTerranFinalArmyInitMdHd(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWTerranLateInitMdHd
//--------------------------------------------------------------------------------------------------
void BWTerranLateInitMdHd (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int curPhase = c_ldPhaseLate;
    int buildType = 0;

    AIChooseNextLateGameBuild(player);
    buildType = AIGetUserInt(player, c_lateGameBuildType);

    if (lateLoop <= 0) { // First Late Loop
        AISetupNextArmy (player, buildType, curPhase, BWTerranLateArmyInitMdHd);
    } else {
        curPhase = c_ldPhaseFinal + lateLoop;
        AISetupNextArmy (player, buildType, curPhase, BWTerranFinalArmyInitMdHd);
    }

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsClearObs, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Late, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWTerranLateBuildMdHd
//--------------------------------------------------------------------------------------------------
void BWTerranLateBuildMdHd (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int buildType = AIGetUserInt(player, c_lateGameBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentLateGame(player)) {
        AISetMainState(player, e_mainState_Late, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    BWTerranBasicEconomy(player, c_ldPhaseLate, 20);
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWTU_Dropship );
    }
    BWTerranBasicExpansion(player, c_ldPhaseLate, 12000, 3500);

    BWTerranBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWTerranGeneralBuild(player, c_ldPhaseLate);

    AILDStockWorkers( player, 23, c_BWTU_SCV);

    if (buildType == e_buildType_Core) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_MachineShop, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_ControlTower, c_stockIdle );
    }
    else if (buildType == e_buildType_HighTech) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_MachineShop, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_ControlTower, c_stockIdle );
    }
    else if (buildType == e_buildType_Special) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_MachineShop, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_ControlTower, c_stockIdle );
    }
    else if (buildType == e_buildType_Mixed) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_MachineShop, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_ControlTower, c_stockIdle );
    }
    else if (buildType == e_buildType_Air) {
        if (BWTerranMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWTB_Barracks, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWTB_Academy, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Factory, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_MachineShop, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_Starport, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWTB_ControlTower, c_stockIdle );
    }

    AISetStock( player, 2, c_BWTU_ScienceVessel );
    AISetStock( player, 1, c_BWTB_ComsatStation );

    AISetStockArmyScale(player, 0.70);

    AISetStock( player, 1, c_BWTU_Dropship );
    AISetStock( player, 3, c_BWTU_Medic );
    AISetStock( player, 3, c_BWTU_ScienceVessel );
    AISetStock( player, 2, c_BWTB_MissileTurret );

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 52, c_BWTU_SCV);

    if (lateLoop <= 0) { // First Late Loop
        BWTerranUpgradesMdHd(player, c_ldPhaseLate);
        BWTerranTechUp(player, c_ldPhaseLate);
    } else { // Remaining Loops
        BWTerranUpgradesMdHd(player, c_ldPhaseFinal);
        BWTerranTechUp(player, c_ldPhaseFinal);
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
    if (nextState) {
        lateLoop += 1;
        AISetUserInt(player, c_ldNumLateLoops, lateLoop);
    }
}

//--------------------------------------------------------------------------------------------------
//  BWTerranOpenMdHd
//--------------------------------------------------------------------------------------------------
void BWTerranOpenMdHd (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWTerranOpenInitMdHd(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWTerranOpenBuildMdHd(player); }
    else { ErrorMeleeScript(player, "Invalid Open MainSubState BWTerranMdHd"); }
}

//--------------------------------------------------------------------------------------------------
//  BWTerranMidMdHd
//--------------------------------------------------------------------------------------------------
void BWTerranMidMdHd (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWTerranMidInitMdHd(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWTerranMidBuildMdHd(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid MainSubState BWTerranMdHd"); }
}

//--------------------------------------------------------------------------------------------------
//  BWTerranLateMdHd
//--------------------------------------------------------------------------------------------------
void BWTerranLateMdHd (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWTerranLateInitMdHd(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWTerranLateBuildMdHd(player);  }
    else { ErrorMeleeScript(player, "Invalid Late MainSubState BWTerranMdHd"); }
}

