//==================================================================================================
//  BWProtoss VeryEasy Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  BWProtossUpgradesVyEy
//--------------------------------------------------------------------------------------------------
void BWProtossUpgradesVyEy (int player, int phase) {
    int buildType;

    if (phase < c_ldPhaseLate) {
        buildType = AIGetUserInt(player, c_openingBuildType);
    } else {
        buildType = AIGetUserInt(player, c_lateGameBuildType);
    }

    if (buildType != e_buildType_Air) {


        if (phase >= c_ldPhaseMid) {


            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_BWPR_ObserverSCBWSpeedUpgrade );
                AISetStock( player, 1, c_BWPR_ShuttleSCBWSpeedUpgrade );

                if (phase >= c_ldPhaseFinal) {


                }
            }
        }
    }
    else {  // (buildType == e_buildType_Air) 


        if (phase >= c_ldPhaseMid) {


            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_BWPR_ObserverSCBWSpeedUpgrade );
                AISetStock( player, 1, c_BWPR_ShuttleSCBWSpeedUpgrade );

                if (phase >= c_ldPhaseFinal) {


                }
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  BWProtossOpenArmyInitVyEy
//--------------------------------------------------------------------------------------------------
int BWProtossOpenArmyInitVyEy (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 2 foodCost and 160 resCost after about 393 seconds
        AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
        // validation: 1 units above with average cost 2 food and 175 resources
        duration = 408 + RandomInt(-13, 20);
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 2 foodCost and 170 resCost after about 450 seconds
        AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
        // validation: 1 units above with average cost 2 food and 175 resources
        duration = 455 + RandomInt(-15, 22);
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 4 foodCost and 240 resCost after about 562 seconds
        AIAddToStockArmy(player, c_BWPU_Zealot, 1);
        AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
        // validation: 2 units above with average cost 4 food and 275 resources
        duration = 596 + RandomInt(-19, 29);
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 2 foodCost and 160 resCost after about 225 seconds
        AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
        // validation: 1 units above with average cost 2 food and 175 resources
        duration = 233 + RandomInt(-7, 11);
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 4 foodCost and 330 resCost after about 618 seconds
        AIAddToStockArmy(player, c_BWPU_Scout, 1);
        // validation: 1 units above with average cost 3 food and 350 resources
        duration = 607 + RandomInt(-20, 30);
    }
    else {
        return BWProtossOpenArmyInitVyEy(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWProtossOpenInitVyEy
//--------------------------------------------------------------------------------------------------
void BWProtossOpenInitVyEy (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseOpen, BWProtossOpenArmyInitVyEy);

    AISetMainState(player, e_mainState_Open, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWProtossOpenBuildVyEy
//--------------------------------------------------------------------------------------------------
void BWProtossOpenBuildVyEy (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Open, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    if (buildType == e_buildType_Rush) {
        AISetStock( player, 1, c_BWPB_Nexus );
        AISetStock( player, 11, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Pylon );
        AISetStock( player, 1, c_BWPB_Gateway );
        AISetStock( player, 1, c_BWPB_Assimilator );
        AISetStock( player, 2, c_BWPB_Pylon );
        AISetStock( player, 1, c_BWPB_CyberneticsCore );
        AISetStockFarms( player, c_BWPB_Pylon, c_stockNormalFarms);
        AISetStock( player, 1, c_BWPU_Dragoon );
    }
    else if (buildType == e_buildType_Timing) {
        AISetStock( player, 1, c_BWPB_Nexus );
        AISetStock( player, 11, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Pylon );
        AISetStock( player, 1, c_BWPB_Gateway );
        AISetStock( player, 1, c_BWPB_Assimilator );
        AISetStock( player, 2, c_BWPB_Pylon );
        AISetStock( player, 1, c_BWPB_CyberneticsCore );
        AISetStockFarms( player, c_BWPB_Pylon, c_stockNormalFarms);
        AISetStock( player, 1, c_BWPU_Dragoon );
        AISetStock( player, 2, c_BWPB_Assimilator );
    }
    else if (buildType == e_buildType_Power) {
        AISetStock( player, 1, c_BWPB_Nexus );
        AISetStock( player, 11, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Pylon );
        AISetStock( player, 1, c_BWPB_Gateway );
        AISetStock( player, 1, c_BWPB_Assimilator );
        AISetStock( player, 2, c_BWPB_Pylon );
        AISetStock( player, 1, c_BWPB_CyberneticsCore );
        AISetStockFarms( player, c_BWPB_Pylon, c_stockNormalFarms);
        AISetStock( player, 1, c_BWPU_Dragoon );
        AISetStock( player, 2, c_BWPB_Assimilator );
    }
    else if (buildType == e_buildType_Macro) {
        AISetStock( player, 1, c_BWPB_Nexus );
        AISetStock( player, 11, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Pylon );
        AISetStock( player, 1, c_BWPB_Gateway );
        if (BWProtossMacroExpand(player)) { return; }
        AISetStock( player, 1, c_BWPU_Zealot );
        AISetStock( player, 2, c_BWPB_Pylon );
        AISetStock( player, 1, c_BWPB_Assimilator );
        AISetStock( player, 1, c_BWPB_CyberneticsCore );
        AISetStockFarms( player, c_BWPB_Pylon, c_stockNormalFarms);
        AISetStockUnitNext( player, 17, c_BWPU_Probe, c_stockIdle );
        AISetStock( player, 1, c_BWPU_Dragoon );
        AISetStock( player, 2, c_BWPB_Assimilator );
    }
    else if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWPB_Nexus );
        AISetStock( player, 11, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Pylon );
        if (BWProtossMacroExpand(player)) { return; }
        AISetStock( player, 1, c_BWPB_Assimilator );
        AISetStock( player, 1, c_BWPB_Gateway );
        AISetStock( player, 2, c_BWPB_Assimilator );
        AISetStock( player, 2, c_BWPB_Pylon );
        AISetStockUnitNext( player, 17, c_BWPU_Probe, c_stockIdle );
        AISetStockFarms( player, c_BWPB_Pylon, c_stockNormalFarms);
        AISetStock( player, 1, c_BWPB_CyberneticsCore );
        AISetStock( player, 1, c_BWPB_Stargate );
        AISetStock( player, 3, c_BWPB_Pylon );
    }

    BWProtossBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWProtossGeneralBuild(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 0.70);

    BWProtossUpgradesVyEy(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 17, c_BWPU_Probe);

    BWProtossTechUp(player, c_ldPhaseOpen);

    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWPU_Shuttle );
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Mid, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  BWProtossMidArmyInitVyEy
//--------------------------------------------------------------------------------------------------
int BWProtossMidArmyInitVyEy (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 5 foodCost and 260 resCost after about 380 seconds
        AIAddToStockArmy(player, c_BWPU_Zealot, 1);
        AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
        // validation: 2 units above with average cost 4 food and 275 resources
        duration = 371 + RandomInt(-12, 18);
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 6 foodCost and 320 resCost after about 420 seconds
        AIAddToStockArmy(player, c_BWPU_Zealot, 2);
        AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
        // validation: 3 units above with average cost 6 food and 375 resources
        duration = 450 + RandomInt(-15, 22);
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 6 foodCost and 350 resCost after about 440 seconds
        AIAddToStockArmy(player, c_BWPU_Zealot, 1);
        AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
        AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
        // validation: 3 units above with average cost 6 food and 400 resources
        duration = 466 + RandomInt(-15, 23);
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 8 foodCost and 480 resCost after about 618 seconds
        // note: mid macro build did not send opening attack at 225 time
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            // validation: 4 units above with average cost 8 food and 525 resources
            duration = 650 + RandomInt(-29, 43);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            // validation: 4 units above with average cost 8 food and 550 resources
            duration = 669 + RandomInt(-29, 44);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            // validation: 4 units above with average cost 8 food and 550 resources
            duration = 669 + RandomInt(-29, 44);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 6 foodCost and 600 resCost after about 420 seconds
        AIAddToStockArmy(player, c_BWPU_Scout, 2);
        // validation: 2 units above with average cost 6 food and 700 resources
        duration = 449 + RandomInt(-14, 22);
    }
    else {
        return BWProtossMidArmyInitVyEy(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWProtossMidInitVyEy
//--------------------------------------------------------------------------------------------------
void BWProtossMidInitVyEy (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseMid, BWProtossMidArmyInitVyEy);

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Mid, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWProtossMidBuildVyEy
//--------------------------------------------------------------------------------------------------
void BWProtossMidBuildVyEy (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Mid, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    BWProtossBasicEconomy(player, c_ldPhaseMid, 14);
    AISetStock( player, 3, c_BWPB_Pylon );
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWPU_Shuttle );
    }
    BWProtossBasicExpansion(player, c_ldPhaseMid, 5500, 1500);

    BWProtossBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWProtossGeneralBuild(player, c_ldPhaseMid);

    AILDStockWorkers( player, 17, c_BWPU_Probe);

    if (buildType == e_buildType_Rush) {
    }
    else if (buildType == e_buildType_Timing) {
    }
    else if (buildType == e_buildType_Power) {
        if (BWProtossMacroExpand(player)) { return; }
    }
    else if (buildType == e_buildType_Macro) {
        if (BWProtossMacroExpand(player)) { return; }
    }
    else if (buildType == e_buildType_Air) {
        if (BWProtossMacroExpand(player)) { return; }
    }

    if (AINeedsDetection(player)) {
        AISetStock( player, 1, c_BWPU_Observer );
    }

    AISetStockArmyScale(player, 0.70);

    AILDStockWorkers( player, 36, c_BWPU_Probe);

    BWProtossUpgradesVyEy(player, c_ldPhaseMid);

    AISetStockArmyScale(player, 1.00);

    AISetStock( player, 2, c_BWPU_Observer );

    BWProtossTechUp(player, c_ldPhaseMid);

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  BWProtossLateArmyInitVyEy
//--------------------------------------------------------------------------------------------------
int BWProtossLateArmyInitVyEy (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 10 foodCost and 600 resCost after about 340 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            // validation: 4 units above with average cost 8 food and 600 resources
            duration = 323 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            // validation: 5 units above with average cost 10 food and 675 resources
            duration = 357 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            // validation: 4 units above with average cost 8 food and 625 resources
            duration = 329 + RandomInt(-10, 16);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 11 foodCost and 640 resCost after about 360 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, c_BWPU_Scout, 1);
            // validation: 4 units above with average cost 9 food and 725 resources
            duration = 363 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, c_BWPU_Reaver, 1);
            // validation: 4 units above with average cost 10 food and 800 resources
            duration = 389 + RandomInt(-12, 19);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 12 foodCost and 680 resCost after about 380 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            // validation: 6 units above with average cost 12 food and 850 resources
            duration = 419 + RandomInt(-13, 20);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_HighTemplar, 1);
            // validation: 5 units above with average cost 10 food and 725 resources
            duration = 375 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 12 foodCost and 720 resCost after about 400 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Corsair, 1);
            // validation: 5 units above with average cost 10 food and 775 resources
            duration = 397 + RandomInt(-13, 19);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Corsair, 1);
            // validation: 5 units above with average cost 10 food and 800 resources
            duration = 401 + RandomInt(-13, 20);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Reaver, 1);
            // validation: 5 units above with average cost 12 food and 875 resources
            duration = 435 + RandomInt(-14, 21);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 8 foodCost and 800 resCost after about 360 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Scout, 2);
            AIAddToStockArmy(player, c_BWPU_Corsair, 1);
            // validation: 3 units above with average cost 8 food and 950 resources
            duration = 388 + RandomInt(-12, 19);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Scout, 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 1);
            // validation: 2 units above with average cost 9 food and 950 resources
            duration = 399 + RandomInt(-13, 19);
        }
    }
    else {
        return BWProtossLateArmyInitVyEy(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWProtossFinalArmyInitVyEy
//--------------------------------------------------------------------------------------------------
int BWProtossFinalArmyInitVyEy (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 15 foodCost and 900 resCost after about 300 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 4);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            // validation: 8 units above with average cost 16 food and 1075 resources
            duration = 329 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            // validation: 8 units above with average cost 16 food and 1075 resources
            duration = 329 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 4);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            // validation: 7 units above with average cost 14 food and 1050 resources
            duration = 315 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 16 foodCost and 960 resCost after about 320 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, c_BWPU_Scout, 2);
            // validation: 5 units above with average cost 12 food and 1075 resources
            duration = 316 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            AIAddToStockArmy(player, c_BWPU_Reaver, 2);
            // validation: 5 units above with average cost 14 food and 1225 resources
            duration = 346 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 17 foodCost and 1020 resCost after about 340 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, c_BWPU_Zealot, 4);
            // validation: 8 units above with average cost 16 food and 1150 resources
            duration = 353 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 4);
            AIAddToStockArmy(player, c_BWPU_HighTemplar, 2);
            // validation: 8 units above with average cost 16 food and 1300 resources
            duration = 373 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 18 foodCost and 1080 resCost after about 360 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Corsair, 2);
            // validation: 7 units above with average cost 14 food and 1200 resources
            duration = 357 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Corsair, 2);
            // validation: 8 units above with average cost 16 food and 1300 resources
            duration = 380 + RandomInt(-12, 19);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Reaver, 1);
            // validation: 7 units above with average cost 16 food and 1225 resources
            duration = 370 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 12 foodCost and 1200 resCost after about 320 seconds
        armyRoll = RandomInt(1,3);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Scout, 3);
            AIAddToStockArmy(player, c_BWPU_Corsair, 1);
            // validation: 4 units above with average cost 11 food and 1300 resources
            duration = 324 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Scout, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 1);
            // validation: 3 units above with average cost 12 food and 1300 resources
            duration = 331 + RandomInt(-11, 16);
        }
    }
    else {
        return BWProtossFinalArmyInitVyEy(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWProtossLateInitVyEy
//--------------------------------------------------------------------------------------------------
void BWProtossLateInitVyEy (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int curPhase = c_ldPhaseLate;
    int buildType = 0;

    AIChooseNextLateGameBuild(player);
    buildType = AIGetUserInt(player, c_lateGameBuildType);

    if (lateLoop <= 0) { // First Late Loop
        AISetupNextArmy (player, buildType, curPhase, BWProtossLateArmyInitVyEy);
    } else {
        curPhase = c_ldPhaseFinal + lateLoop;
        AISetupNextArmy (player, buildType, curPhase, BWProtossFinalArmyInitVyEy);
    }

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsClearObs, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Late, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWProtossLateBuildVyEy
//--------------------------------------------------------------------------------------------------
void BWProtossLateBuildVyEy (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int buildType = AIGetUserInt(player, c_lateGameBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentLateGame(player)) {
        AISetMainState(player, e_mainState_Late, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    BWProtossBasicEconomy(player, c_ldPhaseLate, 14);
    AISetStock( player, 3, c_BWPB_Pylon );
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWPU_Shuttle );
    }
    BWProtossBasicExpansion(player, c_ldPhaseLate, 7000, 1500);

    BWProtossBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWProtossGeneralBuild(player, c_ldPhaseLate);

    AILDStockWorkers( player, 17, c_BWPU_Probe);

    if (buildType == e_buildType_Core) {
        if (BWProtossMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 3, c_BWPB_Gateway, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWPB_RoboticsFacility, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWPB_Stargate, c_stockIdle );
    }
    else if (buildType == e_buildType_HighTech) {
        if (BWProtossMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 3, c_BWPB_Gateway, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWPB_RoboticsFacility, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWPB_Stargate, c_stockIdle );
    }
    else if (buildType == e_buildType_Special) {
        if (BWProtossMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 3, c_BWPB_Gateway, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWPB_RoboticsFacility, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWPB_Stargate, c_stockIdle );
    }
    else if (buildType == e_buildType_Mixed) {
        if (BWProtossMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 3, c_BWPB_Gateway, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWPB_RoboticsFacility, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWPB_Stargate, c_stockIdle );
    }
    else if (buildType == e_buildType_Air) {
        if (BWProtossMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 1, c_BWPB_Gateway, c_stockIdle );
        AISetStockUnitNext( player, 1, c_BWPB_RoboticsFacility, c_stockIdle );
        AISetStockUnitNext( player, 3, c_BWPB_Stargate, c_stockIdle );
    }

    AISetStock( player, 2, c_BWPU_Observer );

    AISetStockArmyScale(player, 0.70);

    AISetStock( player, 2, c_BWPU_Shuttle );
    AISetStock( player, 3, c_BWPU_Observer );

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 36, c_BWPU_Probe);

    if (lateLoop <= 0) { // First Late Loop
        BWProtossUpgradesVyEy(player, c_ldPhaseLate);
        BWProtossTechUp(player, c_ldPhaseLate);
    } else { // Remaining Loops
        BWProtossUpgradesVyEy(player, c_ldPhaseFinal);
        BWProtossTechUp(player, c_ldPhaseFinal);
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
    if (nextState) {
        lateLoop += 1;
        AISetUserInt(player, c_ldNumLateLoops, lateLoop);
    }
}

//--------------------------------------------------------------------------------------------------
//  BWProtossOpenVyEy
//--------------------------------------------------------------------------------------------------
void BWProtossOpenVyEy (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWProtossOpenInitVyEy(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWProtossOpenBuildVyEy(player); }
    else { ErrorMeleeScript(player, "Invalid Open MainSubState BWProtossVyEy"); }
}

//--------------------------------------------------------------------------------------------------
//  BWProtossMidVyEy
//--------------------------------------------------------------------------------------------------
void BWProtossMidVyEy (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWProtossMidInitVyEy(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWProtossMidBuildVyEy(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid MainSubState BWProtossVyEy"); }
}

//--------------------------------------------------------------------------------------------------
//  BWProtossLateVyEy
//--------------------------------------------------------------------------------------------------
void BWProtossLateVyEy (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWProtossLateInitVyEy(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWProtossLateBuildVyEy(player);  }
    else { ErrorMeleeScript(player, "Invalid Late MainSubState BWProtossVyEy"); }
}

