//==================================================================================================
//  BWProtoss MediumHard Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  BWProtossUpgradesMdHd
//--------------------------------------------------------------------------------------------------
void BWProtossUpgradesMdHd (int player, int phase) {
    int buildType;

    if (phase < c_ldPhaseLate) {
        buildType = AIGetUserInt(player, c_openingBuildType);
    } else {
        buildType = AIGetUserInt(player, c_lateGameBuildType);
    }

    if (buildType != e_buildType_Air) {

        if (AITechCount(player, c_BWPU_Dragoon, c_techCountInProgressOrBetter) >= 3) {
            AISetStock( player, 1, c_BWPR_DragoonSCBWRangeUpgrade );
        }

        if (phase >= c_ldPhaseMid) {

            AISetStock( player, 1, c_BWPR_ProtossGroundWeaponsSCBW_Lvl1 );
            AISetStock( player, 1, c_BWPR_ProtossGroundArmorsSCBW_Lvl1 );
            if (AITechCount(player, c_BWPU_Zealot, c_techCountInProgressOrBetter) >= 8) {
                AISetStock( player, 1, c_BWPR_ZealotSCBWSpeedUpgrade );
            }
            if (AITechCount(player, c_BWPU_Dragoon, c_techCountInProgressOrBetter) >= 6) {
                AISetStock( player, 1, c_BWPR_DragoonSCBWRangeUpgrade );
            }

            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_BWPR_ProtossGroundWeaponsSCBW_Lvl2 );
                AISetStock( player, 1, c_BWPR_ProtossGroundArmorsSCBW_Lvl2 );
                AISetStock( player, 1, c_BWPR_ProtossShieldsSCBW_Lvl2 );
                AISetStock( player, 1, c_BWPR_ObserverSCBWSpeedUpgrade );
                AISetStock( player, 1, c_BWPR_ShuttleSCBWSpeedUpgrade );
                AISetStock( player, 1, c_BWPR_ProtossAirWeaponsSCBW_Lvl1 );
                AISetStock( player, 1, c_BWPR_ProtossAirArmorsSCBW_Lvl1 );

                if (phase >= c_ldPhaseFinal) {

                    if (AITechCount(player, c_BWPU_Reaver, c_techCountInProgressOrBetter) >= 2) {
                        AISetStock( player, 1, c_BWPR_ScarabSCBWWeaponDamageUpgrade );
                    }
                    if (AITechCount(player, c_BWPU_HighTemplar, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWPR_HighTemplarSCBWPsiStormResearch );
                    }
                    if (AITechCount(player, c_BWPU_Corsair, c_techCountInProgressOrBetter) >= 2) {
                        AISetStock( player, 1, c_BWPR_CorsairSCBWEnergyUpgrade );
                    }
                    AISetStock( player, 1, c_BWPR_ProtossGroundWeaponsSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWPR_ProtossGroundArmorsSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWPR_ProtossShieldsSCBW_Lvl3 );
                    if (AITechCount(player, c_BWPU_Scout, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWPR_ScoutSCBWSpeedUpgrade );
                    }
                    if (AITechCount(player, c_BWPU_Carrier, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWPR_CarrierSCBWHangarIncreaseUpgrade );
                    }
                    AISetStock( player, 1, c_BWPR_ProtossAirWeaponsSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWPR_ProtossAirArmorsSCBW_Lvl3 );

                }
            }
        }
    }
    else {  // (buildType == e_buildType_Air) 


        if (phase >= c_ldPhaseMid) {

            AISetStock( player, 1, c_BWPR_ProtossAirWeaponsSCBW_Lvl1 );
            AISetStock( player, 1, c_BWPR_ProtossAirArmorsSCBW_Lvl1 );

            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_BWPR_ObserverSCBWSpeedUpgrade );
                AISetStock( player, 1, c_BWPR_ShuttleSCBWSpeedUpgrade );
                if (AITechCount(player, c_BWPU_Corsair, c_techCountInProgressOrBetter) >= 4) {
                    AISetStock( player, 1, c_BWPR_CorsairSCBWDisruptionWebResearch );
                }
                if (AITechCount(player, c_BWPU_Carrier, c_techCountInProgressOrBetter) >= 1) {
                    AISetStock( player, 1, c_BWPR_CarrierSCBWHangarIncreaseUpgrade );
                }
                AISetStock( player, 1, c_BWPR_ProtossAirWeaponsSCBW_Lvl2 );
                AISetStock( player, 1, c_BWPR_ProtossAirArmorsSCBW_Lvl2 );
                AISetStock( player, 1, c_BWPR_ProtossShieldsSCBW_Lvl2 );

                if (phase >= c_ldPhaseFinal) {

                    AISetStock( player, 1, c_BWPR_ProtossAirWeaponsSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWPR_ProtossAirArmorsSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWPR_ProtossShieldsSCBW_Lvl3 );
                    if (AITechCount(player, c_BWPU_Zealot, c_techCountInProgressOrBetter) >= 6) {
                        AISetStock( player, 1, c_BWPR_ZealotSCBWSpeedUpgrade );
                    }
                    if (AITechCount(player, c_BWPU_Dragoon, c_techCountInProgressOrBetter) >= 6) {
                        AISetStock( player, 1, c_BWPR_DragoonSCBWRangeUpgrade );
                    }
                    if (AITechCount(player, c_BWPU_Reaver, c_techCountInProgressOrBetter) >= 2) {
                        AISetStock( player, 1, c_BWPR_ScarabSCBWWeaponDamageUpgrade );
                    }
                    if (AITechCount(player, c_BWPU_HighTemplar, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWPR_HighTemplarSCBWPsiStormResearch );
                    }
                    if (AITechCount(player, c_BWPU_Dragoon, c_techCountInProgressOrBetter) >= 6) {
                        AISetStock( player, 1, c_BWPR_DragoonSCBWRangeUpgrade );
                    }
                    AISetStock( player, 1, c_BWPR_ProtossGroundWeaponsSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWPR_ProtossGroundArmorsSCBW_Lvl3 );

                }
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  BWProtossOpenArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int BWProtossOpenArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 11 foodCost and 560 resCost after about 337 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 3);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            // validation: 5 units above with average cost 10 food and 750 resources
            duration = 345 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 4);
            // validation: 6 units above with average cost 12 food and 700 resources
            duration = 350 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 4);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            // validation: 6 units above with average cost 12 food and 700 resources
            duration = 350 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 15 foodCost and 880 resCost after about 393 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 6);
            // validation: 8 units above with average cost 16 food and 1200 resources
            duration = 418 + RandomInt(-13, 20);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 7);
            // validation: 9 units above with average cost 18 food and 1075 resources
            duration = 410 + RandomInt(-13, 20);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 5);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            // validation: 9 units above with average cost 18 food and 1112 resources
            duration = 416 + RandomInt(-13, 20);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 20 foodCost and 1200 resCost after about 506 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 8);
            // validation: 10 units above with average cost 20 food and 1500 resources
            duration = 513 + RandomInt(-17, 25);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 7);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 1);
            // validation: 11 units above with average cost 22 food and 1425 resources
            duration = 507 + RandomInt(-16, 25);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 6);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            // validation: 12 units above with average cost 24 food and 1512 resources
            duration = 533 + RandomInt(-17, 26);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 11 foodCost and 620 resCost after about 225 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            // validation: 5 units above with average cost 10 food and 675 resources
            duration = 211 + RandomInt(-7, 10);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 4);
            // validation: 6 units above with average cost 12 food and 700 resources
            duration = 224 + RandomInt(-7, 11);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 4);
            // validation: 5 units above with average cost 10 food and 750 resources
            duration = 221 + RandomInt(-7, 11);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 12 foodCost and 1200 resCost after about 525 seconds
        AIAddToStockArmy(player, c_BWPU_Corsair, 1);
        AIAddToStockArmy(player, c_BWPU_Scout, 1);
        AIAddToStockArmyPickFrom2Count(player, c_BWPU_Corsair, 2, c_BWPU_Scout, 3);
        // validation: 5 units above with average cost 11 food and 1325 resources
        duration = 536 + RandomInt(-17, 26);
    }
    else {
        return BWProtossOpenArmyInitMdHd(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWProtossOpenInitMdHd
//--------------------------------------------------------------------------------------------------
void BWProtossOpenInitMdHd (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseOpen, BWProtossOpenArmyInitMdHd);

    AISetMainState(player, e_mainState_Open, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWProtossOpenBuildMdHd
//--------------------------------------------------------------------------------------------------
void BWProtossOpenBuildMdHd (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Open, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    if (buildType == e_buildType_Rush) {
        AISetStock( player, 1, c_BWPB_Nexus );
        AISetStock( player, 11, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Pylon );
        AISetStock( player, 13, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Gateway );
        AISetStock( player, 14, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Assimilator );
        AISetStock( player, 15, c_BWPU_Probe );
        AISetStock( player, 2, c_BWPB_Pylon );
        AISetStock( player, 16, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_CyberneticsCore );
        AISetStock( player, 1, c_BWPU_Zealot );
        AISetStockUnitNext( player, 17, c_BWPU_Probe, c_stockIdle );
        AISetStockFarms( player, c_BWPB_Pylon, c_stockNormalFarms);
        AISetStock( player, 1, c_BWPU_Dragoon );
        AISetStock( player, 2, c_BWPB_Gateway );
    }
    else if (buildType == e_buildType_Timing) {
        AISetStock( player, 1, c_BWPB_Nexus );
        AISetStock( player, 11, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Pylon );
        AISetStock( player, 13, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Gateway );
        AISetStock( player, 14, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Assimilator );
        AISetStock( player, 15, c_BWPU_Probe );
        AISetStock( player, 2, c_BWPB_Pylon );
        AISetStock( player, 16, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_CyberneticsCore );
        AISetStock( player, 1, c_BWPU_Zealot );
        AISetStockUnitNext( player, 17, c_BWPU_Probe, c_stockIdle );
        AISetStockFarms( player, c_BWPB_Pylon, c_stockNormalFarms);
        AISetStock( player, 1, c_BWPU_Dragoon );
        AISetStock( player, 2, c_BWPB_Gateway );
        AISetStock( player, 2, c_BWPB_Assimilator );
    }
    else if (buildType == e_buildType_Power) {
        AISetStock( player, 1, c_BWPB_Nexus );
        AISetStock( player, 11, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Pylon );
        AISetStock( player, 13, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Gateway );
        AISetStock( player, 14, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Assimilator );
        AISetStock( player, 15, c_BWPU_Probe );
        AISetStock( player, 2, c_BWPB_Pylon );
        AISetStock( player, 16, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_CyberneticsCore );
        AISetStock( player, 1, c_BWPU_Zealot );
        AISetStockUnitNext( player, 17, c_BWPU_Probe, c_stockIdle );
        AISetStockFarms( player, c_BWPB_Pylon, c_stockNormalFarms);
        AISetStock( player, 1, c_BWPU_Dragoon );
        AISetStock( player, 2, c_BWPB_Gateway );
        AISetStock( player, 2, c_BWPB_Assimilator );
    }
    else if (buildType == e_buildType_Macro) {
        AISetStock( player, 1, c_BWPB_Nexus );
        AISetStock( player, 11, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Pylon );
        AISetStock( player, 13, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Gateway );
        AISetStock( player, 14, c_BWPU_Probe );
        if (BWProtossMacroExpand(player)) { return; }
        AISetStock( player, 15, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPU_Zealot );
        AISetStock( player, 2, c_BWPB_Pylon );
        AISetStock( player, 1, c_BWPB_Assimilator );
        AISetStock( player, 1, c_BWPB_CyberneticsCore );
        AISetStock( player, 16, c_BWPU_Probe );
        AISetStockFarms( player, c_BWPB_Pylon, c_stockNormalFarms);
        AISetStockUnitNext( player, 23, c_BWPU_Probe, c_stockIdle );
        AISetStock( player, 2, c_BWPU_Dragoon );
        AISetStock( player, 2, c_BWPB_Gateway );
        AISetStock( player, 2, c_BWPB_Assimilator );
    }
    else if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWPB_Nexus );
        AISetStock( player, 11, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Pylon );
        AISetStock( player, 13, c_BWPU_Probe );
        if (BWProtossMacroExpand(player)) { return; }
        AISetStock( player, 1, c_BWPB_Assimilator );
        AISetStock( player, 14, c_BWPU_Probe );
        AISetStock( player, 1, c_BWPB_Gateway );
        AISetStock( player, 15, c_BWPU_Probe );
        AISetStock( player, 2, c_BWPB_Assimilator );
        AISetStock( player, 16, c_BWPU_Probe );
        AISetStock( player, 2, c_BWPB_Pylon );
        AISetStockUnitNext( player, 23, c_BWPU_Probe, c_stockIdle );
        AISetStockFarms( player, c_BWPB_Pylon, c_stockNormalFarms);
        AISetStock( player, 1, c_BWPB_CyberneticsCore );
        AISetStock( player, 2, c_BWPB_Stargate );
        AISetStock( player, 3, c_BWPB_Pylon );
    }

    BWProtossBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWProtossGeneralBuild(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 0.70);

    BWProtossUpgradesMdHd(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 23, c_BWPU_Probe);

    BWProtossTechUp(player, c_ldPhaseOpen);

    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWPU_Shuttle );
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Mid, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  BWProtossMidArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int BWProtossMidArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 20 foodCost and 1200 resCost after about 300 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 5);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            // validation: 10 units above with average cost 20 food and 1437 resources
            duration = 299 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 5);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 1);
            // validation: 11 units above with average cost 22 food and 1525 resources
            duration = 310 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 5);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            // validation: 10 units above with average cost 20 food and 1475 resources
            duration = 301 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 25 foodCost and 1500 resCost after about 330 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 2);
            // validation: 13 units above with average cost 26 food and 1875 resources
            duration = 336 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 5);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 1);
            // validation: 13 units above with average cost 26 food and 1800 resources
            duration = 330 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 6);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            // validation: 12 units above with average cost 24 food and 1800 resources
            duration = 324 + RandomInt(-10, 16);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 26 foodCost and 1580 resCost after about 350 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 4);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 1);
            // validation: 14 units above with average cost 28 food and 2062 resources
            duration = 367 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 4);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 4);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 2);
            // validation: 14 units above with average cost 28 food and 2000 resources
            duration = 362 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 3);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 6);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            // validation: 13 units above with average cost 26 food and 1900 resources
            duration = 348 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 36 foodCost and 2200 resCost after about 525 seconds
        // note: mid macro build did not send opening attack at 225 time
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 5);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 6);
            AIAddToStockArmy(player, c_BWPU_Zealot, 3);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 2);
            // validation: 20 units above with average cost 40 food and 2850 resources
            duration = 561 + RandomInt(-26, 39);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 3);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 8);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 5);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 2);
            // validation: 20 units above with average cost 40 food and 2775 resources
            duration = 552 + RandomInt(-25, 38);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 4);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 9);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Zealot, c_BWPU_Dragoon), 2);
            // validation: 19 units above with average cost 38 food and 2850 resources
            duration = 550 + RandomInt(-25, 38);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 4);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 4);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 4);
            // validation: 15 units above with average cost 36 food and 2900 resources
            duration = 552 + RandomInt(-25, 38);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 18 foodCost and 1800 resCost after about 330 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Scout, 3);
            AIAddToStockArmy(player, c_BWPU_Corsair, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWPU_Corsair, 2, c_BWPU_Scout, 3);
            // validation: 7 units above with average cost 17 food and 2025 resources
            duration = 342 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            AIAddToStockArmy(player, c_BWPU_Scout, 3);
            AIAddToStockArmy(player, c_BWPU_Corsair, 2);
            // validation: 8 units above with average cost 19 food and 2075 resources
            duration = 355 + RandomInt(-11, 17);
        }
    }
    else {
        return BWProtossMidArmyInitMdHd(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWProtossMidInitMdHd
//--------------------------------------------------------------------------------------------------
void BWProtossMidInitMdHd (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseMid, BWProtossMidArmyInitMdHd);

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Mid, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWProtossMidBuildMdHd
//--------------------------------------------------------------------------------------------------
void BWProtossMidBuildMdHd (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Mid, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    BWProtossBasicEconomy(player, c_ldPhaseMid, 20);
    AISetStock( player, 3, c_BWPB_Pylon );
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWPU_Shuttle );
    }
    BWProtossBasicExpansion(player, c_ldPhaseMid, 5500, 1500);

    BWProtossBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWProtossGeneralBuild(player, c_ldPhaseMid);

    AILDStockWorkers( player, 23, c_BWPU_Probe);

    if (buildType == e_buildType_Rush) {
        AISetStockUnitNext( player, 2, c_BWPB_Gateway, c_stockIdle );
    }
    else if (buildType == e_buildType_Timing) {
        AISetStockUnitNext( player, 3, c_BWPB_Gateway, c_stockIdle );
    }
    else if (buildType == e_buildType_Power) {
        if (BWProtossMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 3, c_BWPB_Gateway, c_stockIdle );
    }
    else if (buildType == e_buildType_Macro) {
        if (BWProtossMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 3, c_BWPB_Gateway, c_stockIdle );
    }
    else if (buildType == e_buildType_Air) {
        if (BWProtossMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 3, c_BWPB_Stargate, c_stockIdle );
    }

    if (AINeedsDetection(player)) {
        AISetStock( player, 1, c_BWPU_Observer );
        AISetStock( player, 2, c_BWPB_PhotonCannon );
    }

    AISetStockArmyScale(player, 0.70);

    AILDStockWorkers( player, 52, c_BWPU_Probe);

    BWProtossUpgradesMdHd(player, c_ldPhaseMid);

    AISetStockArmyScale(player, 1.00);

    AISetStock( player, 2, c_BWPU_Observer );

    BWProtossTechUp(player, c_ldPhaseMid);

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  BWProtossLateArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int BWProtossLateArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 36 foodCost and 2200 resCost after about 280 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 4);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 6);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 2);
            // validation: 14 units above with average cost 31 food and 2450 resources
            duration = 283 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 3);
            AIAddToStockArmy(player, c_BWPU_Zealot, 6);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 4);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Reaver, c_BWPU_Scout), 2);
            // validation: 16 units above with average cost 35 food and 2600 resources
            duration = 299 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 3);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 9);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Reaver, c_BWPU_Scout), 2);
            // validation: 16 units above with average cost 35 food and 2875 resources
            duration = 313 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 39 foodCost and 2400 resCost after about 300 seconds
        armyRoll = RandomInt(1,3);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 4);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Dragoon), 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWPU_Reaver, 1, c_BWPU_DarkArchon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Archon), 1);
            // validation: 13 units above with average cost 35 food and 3225 resources
            duration = 335 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Archon, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWPU_Reaver, 1, c_BWPU_DarkArchon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 1);
            // validation: 10 units above with average cost 32 food and 2950 resources
            duration = 315 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 41 foodCost and 2600 resCost after about 320 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 6);
            AIAddToStockArmy(player, c_BWPU_Zealot, 6);
            AIAddToStockArmy(player, c_BWPU_HighTemplar, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 2);
            // validation: 18 units above with average cost 39 food and 3250 resources
            duration = 349 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_HighTemplar, 4);
            AIAddToStockArmy(player, c_BWPU_Archon, 2);
            AIAddToStockArmy(player, c_BWPU_Arbiter, 1);
            // validation: 12 units above with average cost 29 food and 2700 resources
            duration = 302 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 44 foodCost and 2800 resCost after about 340 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 3);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 4);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Reaver, 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWPU_Reaver, 1, c_BWPU_DarkArchon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 1);
            // validation: 15 units above with average cost 41 food and 3500 resources
            duration = 369 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Zealot, 6);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 1);
            AIAddToStockArmy(player, c_BWPU_Arbiter, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWPU_Reaver, 1, c_BWPU_DarkArchon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 1);
            // validation: 17 units above with average cost 43 food and 3475 resources
            duration = 372 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Archon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 2);
            AIAddToStockArmy(player, c_BWPU_Arbiter, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWPU_Reaver, 1, c_BWPU_DarkArchon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 1);
            // validation: 12 units above with average cost 38 food and 3600 resources
            duration = 368 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 28 foodCost and 2800 resCost after about 300 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Scout, 3);
            AIAddToStockArmy(player, c_BWPU_Corsair, 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 3);
            // validation: 7 units above with average cost 29 food and 3100 resources
            duration = 316 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Scout, 3);
            AIAddToStockArmy(player, c_BWPU_Corsair, 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 2);
            AIAddToStockArmy(player, c_BWPU_Arbiter, 1);
            // validation: 7 units above with average cost 26 food and 2850 resources
            duration = 297 + RandomInt(-9, 14);
        }
    }
    else {
        return BWProtossLateArmyInitMdHd(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWProtossFinalArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int BWProtossFinalArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 49 foodCost and 3200 resCost after about 260 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 5);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 5);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Corsair, c_BWPU_Reaver), 1);
            // validation: 17 units above with average cost 39 food and 2975 resources
            duration = 240 + RandomInt(-8, 12);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 3);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 7);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 5);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 1);
            // validation: 19 units above with average cost 41 food and 3050 resources
            duration = 245 + RandomInt(-8, 12);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 8);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWPU_Reaver, 1, c_BWPU_DarkArchon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 1);
            // validation: 17 units above with average cost 42 food and 3525 resources
            duration = 261 + RandomInt(-8, 13);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 52 foodCost and 3500 resCost after about 280 seconds
        armyRoll = RandomInt(1,3);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 6);
            AIAddToStockArmy(player, c_BWPU_Zealot, 3);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWPU_Reaver, 2, c_BWPU_DarkArchon, 4);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 2);
            // validation: 18 units above with average cost 52 food and 4475 resources
            duration = 312 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 4);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 2);
            AIAddToStockArmy(player, c_BWPU_Archon, 4);
            AIAddToStockArmy(player, c_BWPU_HighTemplar, 2);
            // validation: 17 units above with average cost 45 food and 3900 resources
            duration = 283 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 56 foodCost and 3800 resCost after about 300 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 4);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 8);
            AIAddToStockArmy(player, c_BWPU_Zealot, 6);
            AIAddToStockArmy(player, c_BWPU_HighTemplar, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 2);
            // validation: 22 units above with average cost 47 food and 3800 resources
            duration = 288 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 4);
            AIAddToStockArmy(player, c_BWPU_Zealot, 1);
            AIAddToStockArmy(player, c_BWPU_HighTemplar, 3);
            AIAddToStockArmy(player, c_BWPU_Archon, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWPU_Reaver, 1, c_BWPU_DarkArchon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 1);
            AIAddToStockArmy(player, c_BWPU_Arbiter, 1);
            // validation: 18 units above with average cost 51 food and 4750 resources
            duration = 324 + RandomInt(-10, 16);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 60 foodCost and 4100 resCost after about 320 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 4);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 6);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Dragoon), 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 1);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Reaver, c_BWPU_Archon), 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWPU_Reaver, 1, c_BWPU_DarkArchon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 1);
            // validation: 22 units above with average cost 57 food and 4787 resources
            duration = 338 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 6);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 3);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Reaver, c_BWPU_Archon), 2);
            AIAddToStockArmy(player, c_BWPU_Scout, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWPU_Reaver, 1, c_BWPU_DarkArchon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 1);
            // validation: 22 units above with average cost 57 food and 4875 resources
            duration = 341 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Dragoon, 4);
            AIAddToStockArmy(player, c_BWPU_Zealot, 2);
            AIAddToStockArmy(player, c_BWPU_Archon, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWPU_Scout, 2, c_BWPU_Dragoon, 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Scout, c_BWPU_Reaver), 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWPU_Reaver, 1, c_BWPU_DarkArchon, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 1);
            // validation: 18 units above with average cost 48 food and 4287 resources
            duration = 311 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 38 foodCost and 3800 resCost after about 280 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWPU_Scout, 5);
            AIAddToStockArmy(player, c_BWPU_Corsair, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 3);
            // validation: 10 units above with average cost 37 food and 4050 resources
            duration = 285 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWPU_Scout, 3);
            AIAddToStockArmy(player, c_BWPU_Corsair, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWPU_Carrier, c_BWPU_Carrier), 3);
            // validation: 10 units above with average cost 43 food and 4550 resources
            duration = 312 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWPU_Dragoon, 12);
            AIAddToStockArmy(player, c_BWPU_Scout, 2);
            AIAddToStockArmy(player, c_BWPU_Corsair, 2);
            AIAddToStockArmy(player, c_BWPU_Arbiter, 1);
            // validation: 17 units above with average cost 37 food and 3650 resources
            duration = 274 + RandomInt(-9, 13);
        }
    }
    else {
        return BWProtossFinalArmyInitMdHd(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWProtossLateInitMdHd
//--------------------------------------------------------------------------------------------------
void BWProtossLateInitMdHd (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int curPhase = c_ldPhaseLate;
    int buildType = 0;

    AIChooseNextLateGameBuild(player);
    buildType = AIGetUserInt(player, c_lateGameBuildType);

    if (lateLoop <= 0) { // First Late Loop
        AISetupNextArmy (player, buildType, curPhase, BWProtossLateArmyInitMdHd);
    } else {
        curPhase = c_ldPhaseFinal + lateLoop;
        AISetupNextArmy (player, buildType, curPhase, BWProtossFinalArmyInitMdHd);
    }

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsClearObs, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Late, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWProtossLateBuildMdHd
//--------------------------------------------------------------------------------------------------
void BWProtossLateBuildMdHd (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int buildType = AIGetUserInt(player, c_lateGameBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentLateGame(player)) {
        AISetMainState(player, e_mainState_Late, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    BWProtossBasicEconomy(player, c_ldPhaseLate, 20);
    AISetStock( player, 3, c_BWPB_Pylon );
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWPU_Shuttle );
    }
    BWProtossBasicExpansion(player, c_ldPhaseLate, 12000, 3500);

    BWProtossBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWProtossGeneralBuild(player, c_ldPhaseLate);

    AILDStockWorkers( player, 23, c_BWPU_Probe);

    if (buildType == e_buildType_Core) {
        if (BWProtossMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 4, c_BWPB_Gateway, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWPB_RoboticsFacility, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWPB_Stargate, c_stockIdle );
    }
    else if (buildType == e_buildType_HighTech) {
        if (BWProtossMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 4, c_BWPB_Gateway, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWPB_RoboticsFacility, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWPB_Stargate, c_stockIdle );
    }
    else if (buildType == e_buildType_Special) {
        if (BWProtossMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 4, c_BWPB_Gateway, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWPB_RoboticsFacility, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWPB_Stargate, c_stockIdle );
    }
    else if (buildType == e_buildType_Mixed) {
        if (BWProtossMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 4, c_BWPB_Gateway, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWPB_RoboticsFacility, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWPB_Stargate, c_stockIdle );
    }
    else if (buildType == e_buildType_Air) {
        if (BWProtossMacroExpand(player)) { return; }
        AISetStockUnitNext( player, 2, c_BWPB_Gateway, c_stockIdle );
        AISetStockUnitNext( player, 2, c_BWPB_RoboticsFacility, c_stockIdle );
        AISetStockUnitNext( player, 4, c_BWPB_Stargate, c_stockIdle );
    }

    AISetStock( player, 2, c_BWPU_Observer );

    AISetStockArmyScale(player, 0.70);

    AISetStock( player, 3, c_BWPU_Shuttle );
    AISetStock( player, 3, c_BWPU_Observer );
    AISetStock( player, 2, c_BWPB_PhotonCannon );

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 52, c_BWPU_Probe);

    if (lateLoop <= 0) { // First Late Loop
        BWProtossUpgradesMdHd(player, c_ldPhaseLate);
        BWProtossTechUp(player, c_ldPhaseLate);
    } else { // Remaining Loops
        BWProtossUpgradesMdHd(player, c_ldPhaseFinal);
        BWProtossTechUp(player, c_ldPhaseFinal);
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
    if (nextState) {
        lateLoop += 1;
        AISetUserInt(player, c_ldNumLateLoops, lateLoop);
    }
}

//--------------------------------------------------------------------------------------------------
//  BWProtossOpenMdHd
//--------------------------------------------------------------------------------------------------
void BWProtossOpenMdHd (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWProtossOpenInitMdHd(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWProtossOpenBuildMdHd(player); }
    else { ErrorMeleeScript(player, "Invalid Open MainSubState BWProtossMdHd"); }
}

//--------------------------------------------------------------------------------------------------
//  BWProtossMidMdHd
//--------------------------------------------------------------------------------------------------
void BWProtossMidMdHd (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWProtossMidInitMdHd(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWProtossMidBuildMdHd(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid MainSubState BWProtossMdHd"); }
}

//--------------------------------------------------------------------------------------------------
//  BWProtossLateMdHd
//--------------------------------------------------------------------------------------------------
void BWProtossLateMdHd (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWProtossLateInitMdHd(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWProtossLateBuildMdHd(player);  }
    else { ErrorMeleeScript(player, "Invalid Late MainSubState BWProtossMdHd"); }
}

