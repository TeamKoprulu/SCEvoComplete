//==================================================================================================
//  BWZerg MediumHard Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  BWZergUpgradesMdHd
//--------------------------------------------------------------------------------------------------
void BWZergUpgradesMdHd (int player, int phase) {
    int buildType;

    if (phase < c_ldPhaseLate) {
        buildType = AIGetUserInt(player, c_openingBuildType);
    } else {
        buildType = AIGetUserInt(player, c_lateGameBuildType);
    }

    if (buildType != e_buildType_Air) {


        if (phase >= c_ldPhaseMid) {

            if (AITechCount(player, c_BWZU_Zergling, c_techCountInProgressOrBetter) >= 8) {
                AISetStock( player, 1, c_BWZR_ZerglingSCBWSpeedUpgrade );
            }
            AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl1 );
            AISetStock( player, 1, c_BWZR_ZergGroundCarapaceSCBW_Lvl1 );
            AISetStock( player, 1, c_BWZR_ZergMissileAttacksSCBW_Lvl1 );
            if (AITechCount(player, c_BWZU_Hydralisk, c_techCountInProgressOrBetter) >= 3) {
                AISetStock( player, 1, c_BWZR_HydraliskSCBWRangeUpgrade );
            }
            AISetStock( player, 1, c_BWZR_ZergSCBWBurrowResearch );

            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl2 );
                AISetStock( player, 1, c_BWZR_ZergGroundCarapaceSCBW_Lvl2 );
                AISetStock( player, 1, c_BWZR_ZergMissileAttacksSCBW_Lvl2 );
                if (AITechCount(player, c_BWZU_Queen, c_techCountInProgressOrBetter) >= 1) {
                    AISetStock( player, 1, c_BWZR_QueenSCBWEnsnareResearch );
                }
                if (AITechCount(player, c_BWZU_Hydralisk, c_techCountInProgressOrBetter) >= 4) {
                    AISetStock( player, 1, c_BWZR_HydraliskSCBWSpeedUpgrade );
                }
                AISetStock( player, 1, c_BWZR_ZergFlyerAttacksSCBW_Lvl1 );
                AISetStock( player, 1, c_BWZR_ZergFlyerCarapaceSCBW_Lvl1 );

                if (phase >= c_ldPhaseFinal) {

                    if (AITechCount(player, c_BWZU_Zergling, c_techCountInProgressOrBetter) >= 8) {
                        AISetStock( player, 1, c_BWZR_ZerglingSCBWAttackSpeedUpgrade );
                    }
                    if (AITechCount(player, c_BWZU_Defiler, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWZR_DefilerSCBWPlagueResearch );
                    }
                    AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergGroundCarapaceSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl3 );
                    if (AITechCount(player, c_BWZU_Defiler, c_techCountInProgressOrBetter) >= 3) {
                        AISetStock( player, 1, c_BWZR_DefilerSCBWPlagueResearch );
                    }
                    if (AITechCount(player, c_BWZU_Ultralisk, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWZR_UltraliskSCBWArmorUpgrade );
                    }
                    AISetStock( player, 1, c_BWZR_ZergFlyerAttacksSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergFlyerCarapaceSCBW_Lvl3 );

                }
            }
        }
    }
    else {  // (buildType == e_buildType_Air) 


        if (phase >= c_ldPhaseMid) {

            AISetStock( player, 1, c_BWZR_ZergFlyerAttacksSCBW_Lvl1 );
            AISetStock( player, 1, c_BWZR_ZergFlyerCarapaceSCBW_Lvl1 );

            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_BWZR_ZergFlyerAttacksSCBW_Lvl2 );
                AISetStock( player, 1, c_BWZR_ZergFlyerCarapaceSCBW_Lvl2 );
                if (AITechCount(player, c_BWZU_Hydralisk, c_techCountInProgressOrBetter) >= 3) {
                    AISetStock( player, 1, c_BWZR_HydraliskSCBWRangeUpgrade );
                }

                if (phase >= c_ldPhaseFinal) {

                    AISetStock( player, 1, c_BWZR_ZergFlyerAttacksSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergFlyerCarapaceSCBW_Lvl3 );
                    if (AITechCount(player, c_BWZU_Zergling, c_techCountInProgressOrBetter) >= 8) {
                        AISetStock( player, 1, c_BWZR_ZerglingSCBWSpeedUpgrade );
                    }
                    AISetStock( player, 1, c_BWZR_ZergSCBWBurrowResearch );
                    if (AITechCount(player, c_BWZU_Queen, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWZR_QueenSCBWEnsnareResearch );
                    }
                    if (AITechCount(player, c_BWZU_Hydralisk, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWZR_HydraliskSCBWSpeedUpgrade );
                    }
                    if (AITechCount(player, c_BWZU_Zergling, c_techCountInProgressOrBetter) >= 8) {
                        AISetStock( player, 1, c_BWZR_ZerglingSCBWAttackSpeedUpgrade );
                    }
                    if (AITechCount(player, c_BWZU_Queen, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWZR_QueenSCBWEnergyUpgrade );
                    }
                    AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergGroundCarapaceSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl3 );
                    if (AITechCount(player, c_BWZU_Ultralisk, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWZR_UltraliskSCBWArmorUpgrade );
                    }

                }
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  BWZergOpenArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int BWZergOpenArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 11 foodCost and 560 resCost after about 337 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 16);
            // validation: 17 units above with average cost 8 food and 600 resources
            duration = 325 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWZB_HydraliskDen, 1);
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 5);
            // validation: 8 units above with average cost 11 food and 550 resources
            duration = 335 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZB_HydraliskDen, 1);
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 7 units above with average cost 11 food and 650 resources
            duration = 359 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 15 foodCost and 880 resCost after about 393 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 24);
            // validation: 25 units above with average cost 12 food and 900 resources
            duration = 378 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZB_HydraliskDen, 1);
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 8);
            // validation: 11 units above with average cost 17 food and 850 resources
            duration = 400 + RandomInt(-13, 20);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWZB_HydraliskDen, 1);
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            // validation: 9 units above with average cost 15 food and 850 resources
            duration = 388 + RandomInt(-12, 19);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 20 foodCost and 1200 resCost after about 506 seconds
        armyRoll = RandomInt(1,7);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 32);
            // validation: 32 units above with average cost 16 food and 1250 resources
            duration = 490 + RandomInt(-16, 24);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 12);
            // validation: 14 units above with average cost 25 food and 1250 resources
            duration = 546 + RandomInt(-18, 27);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 8);
            // validation: 10 units above with average cost 20 food and 1150 resources
            duration = 498 + RandomInt(-16, 24);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 10);
            // validation: 12 units above with average cost 21 food and 1250 resources
            duration = 521 + RandomInt(-17, 26);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 11 foodCost and 620 resCost after about 225 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 18);
            // validation: 18 units above with average cost 9 food and 650 resources
            duration = 220 + RandomInt(-7, 11);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            // validation: 8 units above with average cost 13 food and 650 resources
            duration = 239 + RandomInt(-7, 11);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 6 units above with average cost 11 food and 650 resources
            duration = 229 + RandomInt(-7, 11);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 12 foodCost and 1200 resCost after about 525 seconds
        AIAddToStockArmy(player, c_BWZU_Mutalisk, 6);
        // validation: 6 units above with average cost 12 food and 1200 resources
        duration = 525 + RandomInt(-17, 26);
    }
    else {
        return BWZergOpenArmyInitMdHd(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWZergOpenInitMdHd
//--------------------------------------------------------------------------------------------------
void BWZergOpenInitMdHd (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseOpen, BWZergOpenArmyInitMdHd);

    AISetMainState(player, e_mainState_Open, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWZergOpenBuildMdHd
//--------------------------------------------------------------------------------------------------
void BWZergOpenBuildMdHd (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Open, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    if (buildType == e_buildType_Rush) {
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 16, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_CreepColony );
        AISetStock( player, 1, c_BWZB_Extractor );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 1, c_BWZB_SunkenColony );
        AISetStock( player, 4, c_BWZU_Zergling );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_HydraliskDen );
        AISetStockUnitNext( player, 20, c_BWZU_Drone, c_stockIdle );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms);
    }
    else if (buildType == e_buildType_Timing) {
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 16, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_CreepColony );
        AISetStock( player, 1, c_BWZB_Extractor );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 1, c_BWZB_SunkenColony );
        AISetStock( player, 4, c_BWZU_Zergling );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_HydraliskDen );
        AISetStockUnitNext( player, 20, c_BWZU_Drone, c_stockIdle );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms);
        AISetStock( player, 2, c_BWZB_Extractor );
    }
    else if (buildType == e_buildType_Power) {
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 16, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 1, c_BWZB_CreepColony );
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_Extractor );
        AISetStock( player, 2, c_BWZB_SunkenColony );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 4, c_BWZU_Zergling );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_HydraliskDen );
        AISetStockUnitNext( player, 20, c_BWZU_Drone, c_stockIdle );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms);
        AISetStock( player, 2, c_BWZB_Extractor );
    }
    else if (buildType == e_buildType_Macro) {
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_CreepColony );
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_SunkenColony );
        AISetStock( player, 1, c_BWZB_Extractor );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 19, c_BWZU_Drone );
        AISetStock( player, 4, c_BWZU_Zergling );
        AISetStock( player, 1, c_BWZB_HydraliskDen );
        AISetStockUnitNext( player, 20, c_BWZU_Drone, c_stockIdle );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms);
        AISetStock( player, 2, c_BWZB_Extractor );
    }
    else if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_CreepColony );
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 2, c_BWZB_Extractor );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 1, c_BWZB_SunkenColony );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 20, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_Lair );
        AISetStock( player, 4, c_BWZU_Overlord );
        AISetStock( player, 1, c_BWZB_Spire_Alias );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms );
        AISetStockUnitNext( player, 26, c_BWZU_Drone, c_stockIdle );
    }

    BWZergBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWZergGeneralBuild(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 0.70);

    BWZergUpgradesMdHd(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 26, c_BWZU_Drone);

    BWZergTechUp(player, c_ldPhaseOpen);

    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWZR_OverlordSCBWSpeedUpgrade );
        AISetStock( player, 1, c_BWZR_OverlordSCBWTransportResearch );
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Mid, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  BWZergMidArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int BWZergMidArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 20 foodCost and 1200 resCost after about 300 seconds
        armyRoll = RandomInt(1,8);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 10);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 4);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 15 units above with average cost 16 food and 1450 resources
            duration = 311 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 9);
            // validation: 13 units above with average cost 20 food and 1200 resources
            duration = 300 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 8);
            // validation: 10 units above with average cost 19 food and 1200 resources
            duration = 297 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Lurker, 2, c_BWZU_Queen, 3);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 1);
            // validation: 10 units above with average cost 17 food and 1275 resources
            duration = 297 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 25 foodCost and 1500 resCost after about 330 seconds
        armyRoll = RandomInt(1,8);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 12);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 6);
            // validation: 18 units above with average cost 18 food and 1600 resources
            duration = 317 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 12);
            // validation: 14 units above with average cost 25 food and 1450 resources
            duration = 326 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 10);
            // validation: 12 units above with average cost 23 food and 1450 resources
            duration = 319 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 8);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 2, c_BWZU_Lurker, 3);
            // validation: 13 units above with average cost 23 food and 1625 resources
            duration = 334 + RandomInt(-11, 16);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 26 foodCost and 1580 resCost after about 350 seconds
        armyRoll = RandomInt(1,8);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 14);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 6);
            // validation: 20 units above with average cost 19 food and 1650 resources
            duration = 333 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 14);
            // validation: 16 units above with average cost 29 food and 1650 resources
            duration = 366 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 11);
            // validation: 13 units above with average cost 26 food and 1650 resources
            duration = 356 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 2, c_BWZU_Lurker, 3);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 13 units above with average cost 23 food and 1725 resources
            duration = 353 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 36 foodCost and 2200 resCost after about 525 seconds
        // note: mid macro build did not send opening attack at 225 time
        armyRoll = RandomInt(1,8);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 20);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 8);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 29 units above with average cost 29 food and 2600 resources
            duration = 545 + RandomInt(-25, 38);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 12);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            // validation: 20 units above with average cost 37 food and 2150 resources
            duration = 524 + RandomInt(-24, 37);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 16);
            // validation: 18 units above with average cost 36 food and 2250 resources
            duration = 532 + RandomInt(-25, 37);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 14);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Lurker, 2, c_BWZU_Queen, 3);
            // validation: 19 units above with average cost 35 food and 2425 resources
            duration = 551 + RandomInt(-25, 38);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 18 foodCost and 1800 resCost after about 330 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 7);
            AIAddToStockArmy(player, c_BWZU_Devourer, 2);
            // validation: 9 units above with average cost 18 food and 1900 resources
            duration = 337 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Mutalisk, c_BWZU_Hydralisk), 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Mutalisk, c_BWZU_Hydralisk), 2);
            AIAddToStockArmy(player, c_BWZU_Devourer, 1);
            // validation: 9 units above with average cost 18 food and 1725 resources
            duration = 325 + RandomInt(-10, 16);
        }
    }
    else {
        return BWZergMidArmyInitMdHd(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWZergMidInitMdHd
//--------------------------------------------------------------------------------------------------
void BWZergMidInitMdHd (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseMid, BWZergMidArmyInitMdHd);

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Mid, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWZergMidBuildMdHd
//--------------------------------------------------------------------------------------------------
void BWZergMidBuildMdHd (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Mid, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    BWZergBasicEconomy(player, c_ldPhaseMid, 20);
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWZR_OverlordSCBWSpeedUpgrade );
        AISetStock( player, 1, c_BWZR_OverlordSCBWTransportResearch );
    }
    BWZergBasicExpansion(player, c_ldPhaseMid, 5500, 1500);

    BWZergBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWZergGeneralBuild(player, c_ldPhaseMid);

    AILDStockWorkers( player, 26, c_BWZU_Drone);

    if (buildType == e_buildType_Rush) {
    }
    else if (buildType == e_buildType_Timing) {
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Power) {
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Macro) {
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Air) {
        if (BWZergMacroExpand(player)) { return; }
    }

    if (AINeedsDetection(player)) {
        AIAddToStockArmy(player, c_BWZU_Overlord, 1);
        AISetStock( player, 2, c_BWZB_SporeColony );
    }

    AISetStockArmyScale(player, 0.70);

    AILDStockWorkers( player, 60, c_BWZU_Drone);

    BWZergUpgradesMdHd(player, c_ldPhaseMid);

    AISetStockArmyScale(player, 1.00);

    AIAddToStockArmy(player, c_BWZU_Overlord, 2);

    BWZergTechUp(player, c_ldPhaseMid);

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  BWZergLateArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int BWZergLateArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 36 foodCost and 2200 resCost after about 280 seconds
        armyRoll = RandomInt(1,9);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 16);
            AIAddToStockArmy(player, c_BWZU_Scourge, 4);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 8);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 29 units above with average cost 29 food and 2600 resources
            duration = 287 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 16);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 19 units above with average cost 35 food and 2200 resources
            duration = 279 + RandomInt(-9, 13);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 15);
            // validation: 17 units above with average cost 34 food and 2150 resources
            duration = 274 + RandomInt(-9, 13);
        }
        else if (armyRoll <= 9) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 12);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Lurker, 2, c_BWZU_Queen, 3);
            // validation: 17 units above with average cost 31 food and 2125 resources
            duration = 267 + RandomInt(-8, 13);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 39 foodCost and 2400 resCost after about 300 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Ultralisk, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            // validation: 12 units above with average cost 37 food and 2950 resources
            duration = 324 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Guardian, 4);
            AIAddToStockArmy(player, c_BWZU_Devourer, 3);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            // validation: 11 units above with average cost 27 food and 3500 resources
            duration = 334 + RandomInt(-11, 16);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 41 foodCost and 2600 resCost after about 320 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 8);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            // validation: 18 units above with average cost 33 food and 2950 resources
            duration = 322 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Lurker, 2, c_BWZU_Queen, 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 17 units above with average cost 33 food and 2925 resources
            duration = 321 + RandomInt(-10, 16);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 44 foodCost and 2800 resCost after about 340 seconds
        armyRoll = RandomInt(1,3);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 12);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 24 units above with average cost 46 food and 3200 resources
            duration = 364 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Guardian, c_BWZU_Ultralisk), 2);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 17 units above with average cost 38 food and 3100 resources
            duration = 343 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 28 foodCost and 2800 resCost after about 300 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 10);
            AIAddToStockArmy(player, c_BWZU_Devourer, 2);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 14 units above with average cost 30 food and 3100 resources
            duration = 318 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 5);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Mutalisk, c_BWZU_Hydralisk), 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Mutalisk, c_BWZU_Hydralisk), 2);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 16 units above with average cost 34 food and 3025 resources
            duration = 326 + RandomInt(-10, 16);
        }
    }
    else {
        return BWZergLateArmyInitMdHd(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWZergFinalArmyInitMdHd
//--------------------------------------------------------------------------------------------------
int BWZergFinalArmyInitMdHd (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 49 foodCost and 3200 resCost after about 260 seconds
        armyRoll = RandomInt(1,9);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 20);
            AIAddToStockArmy(player, c_BWZU_Zergling, 8);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 12);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 42 units above with average cost 44 food and 4100 resources
            duration = 283 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 16);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 8);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            // validation: 28 units above with average cost 53 food and 3350 resources
            duration = 270 + RandomInt(-9, 13);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 8);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 5);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 22 units above with average cost 46 food and 3000 resources
            duration = 250 + RandomInt(-8, 12);
        }
        else if (armyRoll <= 9) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 12);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Lurker, 2, c_BWZU_Queen, 3);
            // validation: 25 units above with average cost 47 food and 3325 resources
            duration = 261 + RandomInt(-8, 13);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 52 foodCost and 3500 resCost after about 280 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Ultralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 15 units above with average cost 51 food and 4200 resources
            duration = 301 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Guardian, 6);
            AIAddToStockArmy(player, c_BWZU_Devourer, 3);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            // validation: 13 units above with average cost 35 food and 4600 resources
            duration = 293 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 56 foodCost and 3800 resCost after about 300 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 12);
            AIAddToStockArmy(player, c_BWZU_Queen, 10);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 29 units above with average cost 56 food and 4650 resources
            duration = 327 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 10);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmy(player, c_BWZU_Queen, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Lurker, 2, c_BWZU_Queen, 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 25 units above with average cost 49 food and 3925 resources
            duration = 295 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 60 foodCost and 4100 resCost after about 320 seconds
        armyRoll = RandomInt(1,3);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 10);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 4);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Guardian, c_BWZU_Ultralisk), 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 27 units above with average cost 62 food and 5125 resources
            duration = 356 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Guardian, 5, c_BWZU_Ultralisk, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Lurker, 2, c_BWZU_Queen, 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 23 units above with average cost 56 food and 5100 resources
            duration = 347 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 38 foodCost and 3800 resCost after about 280 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 12);
            AIAddToStockArmy(player, c_BWZU_Devourer, 4);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 18 units above with average cost 38 food and 4000 resources
            duration = 286 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 6);
            AIAddToStockArmy(player, c_BWZU_Devourer, 2);
            AIAddToStockArmy(player, c_BWZU_Guardian, 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 13 units above with average cost 34 food and 3950 resources
            duration = 278 + RandomInt(-9, 13);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Mutalisk, c_BWZU_Hydralisk), 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Mutalisk, c_BWZU_Hydralisk), 3);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            // validation: 20 units above with average cost 42 food and 3750 resources
            duration = 285 + RandomInt(-9, 14);
        }
    }
    else {
        return BWZergFinalArmyInitMdHd(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWZergLateInitMdHd
//--------------------------------------------------------------------------------------------------
void BWZergLateInitMdHd (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int curPhase = c_ldPhaseLate;
    int buildType = 0;

    AIChooseNextLateGameBuild(player);
    buildType = AIGetUserInt(player, c_lateGameBuildType);

    if (lateLoop <= 0) { // First Late Loop
        AISetupNextArmy (player, buildType, curPhase, BWZergLateArmyInitMdHd);
    } else {
        curPhase = c_ldPhaseFinal + lateLoop;
        AISetupNextArmy (player, buildType, curPhase, BWZergFinalArmyInitMdHd);
    }

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsClearObs, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Late, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWZergLateBuildMdHd
//--------------------------------------------------------------------------------------------------
void BWZergLateBuildMdHd (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int buildType = AIGetUserInt(player, c_lateGameBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentLateGame(player)) {
        AISetMainState(player, e_mainState_Late, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    BWZergBasicEconomy(player, c_ldPhaseLate, 20);
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWZR_OverlordSCBWSpeedUpgrade );
        AISetStock( player, 1, c_BWZR_OverlordSCBWTransportResearch );
    }
    BWZergBasicExpansion(player, c_ldPhaseLate, 12000, 3500);

    BWZergBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWZergGeneralBuild(player, c_ldPhaseLate);

    AILDStockWorkers( player, 26, c_BWZU_Drone);

    if (buildType == e_buildType_Core) {
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_HighTech) {
        if (BWZergMacroExpand(player)) { return; }

        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Special) {
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Mixed) {
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Air) {
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }

    AIAddToStockArmy(player, c_BWZU_Overlord, 2);

    AISetStockArmyScale(player, 0.70);

    AISetStock( player, 1, c_BWZR_OverlordSCBWSpeedUpgrade );
    AISetStock( player, 1, c_BWZR_OverlordSCBWTransportResearch );
    AISetStock( player, 1, c_BWZR_OverlordSCBWSightUpgrade );
    AISetStock( player, 1, c_BWZB_SunkenColony );

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 60, c_BWZU_Drone);

    if (lateLoop <= 0) { // First Late Loop
        BWZergUpgradesMdHd(player, c_ldPhaseLate);
        BWZergTechUp(player, c_ldPhaseLate);
    } else { // Remaining Loops
        BWZergUpgradesMdHd(player, c_ldPhaseFinal);
        BWZergTechUp(player, c_ldPhaseFinal);
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
    if (nextState) {
        lateLoop += 1;
        AISetUserInt(player, c_ldNumLateLoops, lateLoop);
    }
}

//--------------------------------------------------------------------------------------------------
//  BWZergOpenMdHd
//--------------------------------------------------------------------------------------------------
void BWZergOpenMdHd (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWZergOpenInitMdHd(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWZergOpenBuildMdHd(player); }
    else { ErrorMeleeScript(player, "Invalid Open MainSubState BWZergMdHd"); }
}

//--------------------------------------------------------------------------------------------------
//  BWZergMidMdHd
//--------------------------------------------------------------------------------------------------
void BWZergMidMdHd (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWZergMidInitMdHd(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWZergMidBuildMdHd(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid MainSubState BWZergMdHd"); }
}

//--------------------------------------------------------------------------------------------------
//  BWZergLateMdHd
//--------------------------------------------------------------------------------------------------
void BWZergLateMdHd (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWZergLateInitMdHd(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWZergLateBuildMdHd(player);  }
    else { ErrorMeleeScript(player, "Invalid Late MainSubState BWZergMdHd"); }
}

