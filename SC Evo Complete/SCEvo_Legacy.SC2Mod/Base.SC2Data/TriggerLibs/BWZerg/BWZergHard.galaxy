//==================================================================================================
//  Zerg Hard Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  BWZergUpgradesHard
//--------------------------------------------------------------------------------------------------
void BWZergUpgradesHard (int player, int phase) {
    int buildType;

    if (phase < c_ldPhaseLate) {
        buildType = AIGetUserInt(player, c_openingBuildType);
    } else {
        buildType = AIGetUserInt(player, c_lateGameBuildType);
    }

    if (buildType != e_buildType_Air) {

        if (AITechCount(player, c_BWZU_Zergling, c_techCountInProgressOrBetter) >= 8) {
            AISetStock( player, 1, c_BWZR_ZerglingSCBWSpeedUpgrade );
        }

        if (phase >= c_ldPhaseMid) {

            AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl1 );
            AISetStock( player, 1, c_BWZR_ZergGroundCarapaceSCBW_Lvl1 );
            AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl1 );
            if (AITechCount(player, c_BWZU_Hydralisk, c_techCountInProgressOrBetter) >= 3) {
                AISetStock( player, 1, c_BWZR_HydraliskSCBWRangeUpgrade );
            }
            AISetStock( player, 1, c_BWZR_ZergSCBWBurrowResearch );

            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl2 );
                AISetStock( player, 1, c_BWZR_ZergGroundCarapaceSCBW_Lvl2 );
                AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl2 );
                if (AITechCount(player, c_BWZU_Queen, c_techCountInProgressOrBetter) >= 1) {
                    AISetStock( player, 1, c_BWZR_QueenSCBWEnsnareResearch );
                }
                if (AITechCount(player, c_BWZU_Hydralisk, c_techCountInProgressOrBetter) >= 4) {
                    AISetStock( player, 1, c_BWZR_HydraliskSCBWSpeedUpgrade );
                }
                AISetStock( player, 1, c_BWZR_ZergFlyerAttacksSCBW_Lvl1 );
                AISetStock( player, 1, c_BWZR_ZergFlyerCarapaceSCBW_Lvl1 );

                if (phase >= c_ldPhaseFinal) {

                    if (AITechCount(player, c_BWZU_Zergling, c_techCountInProgressOrBetter) >= 8) {
                        AISetStock( player, 1, c_BWZR_ZerglingSCBWAttackSpeedUpgrade );
                    }
                    if (AITechCount(player, c_BWZU_Defiler, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWZR_DefilerSCBWPlagueResearch );
                    }
                    if (AITechCount(player, c_BWZU_Queen, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWZR_QueenSCBWParasiteResearch );
                    }
                    AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergGroundCarapaceSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl3 );
                    if (AITechCount(player, c_BWZU_Defiler, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWZR_DefilerSCBWConsumeResearch );
                    }
                    if (AITechCount(player, c_BWZU_Defiler, c_techCountInProgressOrBetter) >= 2) {
                        AISetStock( player, 1, c_BWZR_DefilerSCBWPlagueResearch );
                    }
                    if (AITechCount(player, c_BWZU_Ultralisk, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWZR_UltraliskSCBWArmorUpgrade );
                    }
                    AISetStock( player, 1, c_BWZR_ZergFlyerAttacksSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergFlyerCarapaceSCBW_Lvl3 );
                    if (AITechCount(player, c_BWZU_Ultralisk, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWZR_UltraliskSCBWSpeedUpgrade );
                    }
                    if (AITechCount(player, c_BWZU_Queen, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWZR_QueenSCBWEnergyUpgrade );
                    }
                    if (AITechCount(player, c_BWZU_Defiler, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWZR_DefilerSCBWEnergyUpgrade );
                    }
                }
            }
        }
    }
    else {  // (buildType == e_buildType_Air) 


        if (phase >= c_ldPhaseMid) {

            AISetStock( player, 1, c_BWZR_ZergFlyerAttacksSCBW_Lvl1 );
            AISetStock( player, 1, c_BWZR_ZergFlyerCarapaceSCBW_Lvl1 );

            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_BWZR_ZergFlyerAttacksSCBW_Lvl2 );
                AISetStock( player, 1, c_BWZR_ZergFlyerCarapaceSCBW_Lvl2 );
                if (AITechCount(player, c_BWZU_Hydralisk, c_techCountInProgressOrBetter) >= 3) {
                    AISetStock( player, 1, c_BWZR_HydraliskSCBWRangeUpgrade );
                }

                if (phase >= c_ldPhaseFinal) {

                    AISetStock( player, 1, c_BWZR_ZergFlyerAttacksSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergFlyerCarapaceSCBW_Lvl3 );
                    if (AITechCount(player, c_BWZU_Zergling, c_techCountInProgressOrBetter) >= 8) {
                        AISetStock( player, 1, c_BWZR_ZerglingSCBWSpeedUpgrade );
                    }
                    if (AITechCount(player, c_BWZU_Hydralisk, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWZR_HydraliskSCBWSpeedUpgrade );
                    }
                    AISetStock( player, 1, c_BWZR_ZergSCBWBurrowResearch );
                    if (AITechCount(player, c_BWZU_Queen, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWZR_QueenSCBWEnsnareResearch );
                    }
                    if (AITechCount(player, c_BWZU_Zergling, c_techCountInProgressOrBetter) >= 8) {
                        AISetStock( player, 1, c_BWZR_ZerglingSCBWAttackSpeedUpgrade );
                    }
                    if (AITechCount(player, c_BWZU_Zergling, c_techCountInProgressOrBetter) >= 8) {
                        AISetStock( player, 1, c_BWZR_ZerglingSCBWAttackSpeedUpgrade );
                    }
                    if (AITechCount(player, c_BWZU_Queen, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWZR_QueenSCBWEnergyUpgrade );
                    }
                    AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergGroundCarapaceSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl3 );
                    if (AITechCount(player, c_BWZU_Ultralisk, c_techCountInProgressOrBetter) >= 1) {
                        AISetStock( player, 1, c_BWZR_UltraliskSCBWArmorUpgrade );
                    }
                    if (AITechCount(player, c_BWZU_Defiler, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWZR_DefilerSCBWConsumeResearch );
                    }
                    if (AITechCount(player, c_BWZU_Defiler, c_techCountInProgressOrBetter) >= 4) {
                        AISetStock( player, 1, c_BWZR_DefilerSCBWPlagueResearch );
                    }
                }
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  BWZergOpenArmyInitHard
//--------------------------------------------------------------------------------------------------
int BWZergOpenArmyInitHard (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 12 foodCost and 640 resCost after about 328 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 24);
            // validation: 21 units above with average cost 10 food and 700 resources
            duration = 328 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWZB_HydraliskDen, 1);
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 9);
            // validation: 9 units above with average cost 13 food and 650 resources
            duration = 336 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZB_HydraliskDen, 1);
            AIAddToStockArmy(player, c_BWZU_Zergling, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            // validation: 7 units above with average cost 11 food and 650 resources
            duration = 324 + RandomInt(-10, 16);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 17 foodCost and 1020 resCost after about 375 seconds
        armyRoll = RandomInt(1,7);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 30);
            // validation: 27 units above with average cost 13 food and 1050 resources
            duration = 358 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZB_HydraliskDen, 1);
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 15);
            // validation: 13 units above with average cost 21 food and 1050 resources
            duration = 401 + RandomInt(-13, 20);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWZB_HydraliskDen, 1);
            AIAddToStockArmy(player, c_BWZU_Zergling, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 9);
            // validation: 10 units above with average cost 18 food and 1050 resources
            duration = 385 + RandomInt(-12, 19);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZB_QueensNest, 1);
            AIAddToStockArmy(player, c_BWZU_Zergling, 12);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 2, c_BWZU_Hydralisk, 3);
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            // validation: 17 units above with average cost 15 food and 1250 resources
            duration = 399 + RandomInt(-13, 19);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 24 foodCost and 1400 resCost after about 487 seconds
        armyRoll = RandomInt(1,9);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 40);
            // validation: 36 units above with average cost 18 food and 1500 resources
            duration = 472 + RandomInt(-15, 23);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 21);
            // validation: 16 units above with average cost 29 food and 1450 resources
            duration = 519 + RandomInt(-17, 25);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 16);
            // validation: 13 units above with average cost 27 food and 1550 resources
            duration = 523 + RandomInt(-17, 26);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 16);
            // validation: 14 units above with average cost 25 food and 1450 resources
            duration = 499 + RandomInt(-16, 24);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 12);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 3, c_BWZU_Defiler, 4);
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 3);
            // validation: 20 units above with average cost 20 food and 1600 resources
            duration = 495 + RandomInt(-16, 24);
        }
        else if (armyRoll <= 9) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 9);
            AIAddToStockArmy(player, c_BWZU_Lurker, 2);
            // validation: 10 units above with average cost 19 food and 1550 resources
            duration = 484 + RandomInt(-16, 24);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 12 foodCost and 700 resCost after about 225 seconds
        armyRoll = RandomInt(1,9);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 24);
            // validation: 20 units above with average cost 10 food and 750 resources
            duration = 223 + RandomInt(-7, 11);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 9);
            // validation: 8 units above with average cost 13 food and 650 resources
            duration = 223 + RandomInt(-7, 11);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            // validation: 6 units above with average cost 11 food and 650 resources
            duration = 214 + RandomInt(-7, 10);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 7);
            // validation: 7 units above with average cost 11 food and 650 resources
            duration = 214 + RandomInt(-7, 10);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 12);
            AIAddToStockArmy(player, c_BWZU_Lurker, 2);
            // validation: 12 units above with average cost 11 food and 850 resources
            duration = 240 + RandomInt(-8, 12);
        }
        else if (armyRoll <= 9) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            AIAddToStockArmy(player, c_BWZU_Lurker, 2);
            // validation: 5 units above with average cost 9 food and 800 resources
            duration = 225 + RandomInt(-7, 11);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 14 foodCost and 1400 resCost after about 506 seconds
        AIAddToStockArmy(player, c_BWZU_Mutalisk, 7);
        // validation: 7 units above with average cost 14 food and 1400 resources
        duration = 506 + RandomInt(-16, 25);
    }
    else {
        return BWZergOpenArmyInitHard(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWZergOpenInitHard
//--------------------------------------------------------------------------------------------------
void BWZergOpenInitHard (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseOpen, BWZergOpenArmyInitHard);

    AISetMainState(player, e_mainState_Open, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWZergOpenBuildHard
//--------------------------------------------------------------------------------------------------
void BWZergOpenBuildHard (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Open, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    if (buildType == e_buildType_Rush) {
        //UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText("Rush"));
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 16, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_CreepColony );
        AISetStock( player, 1, c_BWZB_Extractor );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 2, c_BWZB_Hatchery_Alias);
        AISetStock( player, 1, c_BWZB_SunkenColony );
        AISetStock( player, 4, c_BWZU_Zergling );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_HydraliskDen );
        AISetStockUnitNext( player, 20, c_BWZU_Drone, c_stockIdle );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms);
    }
    else if (buildType == e_buildType_Timing) {
        //UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText("Timing"));
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 16, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 2, c_BWZB_Hatchery_Alias);
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_CreepColony );
        AISetStock( player, 1, c_BWZB_Extractor );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 1, c_BWZB_SunkenColony );
        AISetStock( player, 4, c_BWZU_Zergling );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_HydraliskDen );
        AISetStockUnitNext( player, 20, c_BWZU_Drone, c_stockIdle );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms);
        AISetStock( player, 2, c_BWZB_Extractor );
    }
    else if (buildType == e_buildType_Power) {
        //UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText("Power"));
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 16, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZB_Hatchery_Alias);
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 1, c_BWZB_CreepColony );
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_Extractor );
        AISetStock( player, 2, c_BWZB_SunkenColony );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 4, c_BWZU_Zergling );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_HydraliskDen );
        AISetStockUnitNext( player, 20, c_BWZU_Drone, c_stockIdle );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms);
        AISetStock( player, 2, c_BWZB_Extractor );
    }
    else if (buildType == e_buildType_Macro) {
        //UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText("Macro"));
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_CreepColony );
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_SunkenColony );
        AISetStock( player, 1, c_BWZB_Extractor );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 19, c_BWZU_Drone );
        AISetStock( player, 4, c_BWZU_Zergling );
        AISetStock( player, 1, c_BWZB_HydraliskDen );
        AISetStockUnitNext( player, 20, c_BWZU_Drone, c_stockIdle );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms);
        AISetStock( player, 2, c_BWZB_Extractor );
    }
    else if (buildType == e_buildType_Air) {
        //UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText("Air"));
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_CreepColony );
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 2, c_BWZB_Extractor );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 1, c_BWZB_SunkenColony );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 20, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_Lair );
        AISetStock( player, 4, c_BWZU_Overlord );
        AISetStock( player, 1, c_BWZB_Spire_Alias );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms );
        AISetStockUnitNext( player, 30, c_BWZU_Drone, c_stockIdle );
    }

    BWZergBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWZergGeneralBuild(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 0.70);

    BWZergUpgradesHard(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 30, c_BWZU_Drone);

    BWZergTechUp(player, c_ldPhaseOpen);

    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWZR_OverlordSCBWSpeedUpgrade );
        AISetStock( player, 1, c_BWZR_OverlordSCBWTransportResearch );
        AISetStock( player, 1, c_BWZR_OverlordSCBWSightUpgrade );
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Mid, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  BWZergMidArmyInitHard
//--------------------------------------------------------------------------------------------------
int BWZergMidArmyInitHard (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 25 foodCost and 1500 resCost after about 300 seconds
        armyRoll = RandomInt(1,9);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 10);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 17 units above with average cost 20 food and 1850 resources
            duration = 314 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 9);
            // validation: 14 units above with average cost 25 food and 1450 resources
            duration = 296 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 9);
            // validation: 12 units above with average cost 23 food and 1450 resources
            duration = 290 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 10);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Lurker, 2, c_BWZU_Queen, 3);
            // validation: 13 units above with average cost 23 food and 1625 resources
            duration = 304 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 9) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 7);
            AIAddToStockArmy(player, c_BWZU_Lurker, 2);
            // validation: 11 units above with average cost 21 food and 1550 resources
            duration = 293 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 30 foodCost and 1800 resCost after about 320 seconds
        armyRoll = RandomInt(1,9);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 16);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 6);
            AIAddToStockArmy(player, c_BWZU_Scourge, 2);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 23 units above with average cost 23 food and 2100 resources
            duration = 323 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 14);
            // validation: 18 units above with average cost 33 food and 1950 resources
            duration = 339 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 8);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 12);
            // validation: 15 units above with average cost 30 food and 1950 resources
            duration = 331 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 10);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 2, c_BWZU_Lurker, 3);
            // validation: 15 units above with average cost 27 food and 1875 resources
            duration = 318 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 9) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 9);
            AIAddToStockArmy(player, c_BWZU_Lurker, 2);
            // validation: 13 units above with average cost 25 food and 1800 resources
            duration = 307 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 32 foodCost and 1920 resCost after about 340 seconds
        armyRoll = RandomInt(1,9);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 10);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 8);
            AIAddToStockArmy(player, c_BWZU_Scourge, 4);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 21 units above with average cost 25 food and 2400 resources
            duration = 356 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 14);
            // validation: 18 units above with average cost 33 food and 1950 resources
            duration = 344 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 13);
            // validation: 15 units above with average cost 30 food and 1950 resources
            duration = 337 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 10);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 10);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 2, c_BWZU_Lurker, 3);
            // validation: 23 units above with average cost 31 food and 2125 resources
            duration = 352 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 9) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 8);
            AIAddToStockArmy(player, c_BWZU_Lurker, 3);
            // validation: 14 units above with average cost 29 food and 2250 resources
            duration = 356 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 42 foodCost and 2700 resCost after about 506 seconds
        // note: mid macro build did not send opening attack at 225 time
        armyRoll = RandomInt(1,9);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 32);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 8);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 41 units above with average cost 35 food and 3000 resources
            duration = 509 + RandomInt(-24, 36);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 24);
            // validation: 26 units above with average cost 49 food and 2850 resources
            duration = 553 + RandomInt(-25, 38);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 20);
            // validation: 22 units above with average cost 45 food and 2950 resources
            duration = 547 + RandomInt(-25, 38);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 18);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 2, c_BWZU_Lurker, 2);
            // validation: 23 units above with average cost 43 food and 2825 resources
            duration = 524 + RandomInt(-24, 37);
        }
        else if (armyRoll <= 9) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 12);
            AIAddToStockArmy(player, c_BWZU_Lurker, 4);
            // validation: 19 units above with average cost 40 food and 2950 resources
            duration = 525 + RandomInt(-25, 37);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 22 foodCost and 2200 resCost after about 320 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 8);
            AIAddToStockArmy(player, c_BWZU_Devourer, 2);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 11 units above with average cost 23 food and 2400 resources
            duration = 335 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 5);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Mutalisk, c_BWZU_Hydralisk), 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Mutalisk, c_BWZU_Hydralisk), 2);
            AIAddToStockArmy(player, c_BWZU_Devourer, 2);
            // validation: 12 units above with average cost 24 food and 2375 resources
            duration = 337 + RandomInt(-11, 16);
        }
    }
    else {
        return BWZergMidArmyInitHard(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWZergMidInitHard
//--------------------------------------------------------------------------------------------------
void BWZergMidInitHard (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseMid, BWZergMidArmyInitHard);

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Mid, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWZergMidBuildHard
//--------------------------------------------------------------------------------------------------
void BWZergMidBuildHard (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Mid, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    BWZergBasicEconomy(player, c_ldPhaseMid, 20);
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWZR_OverlordSCBWSpeedUpgrade );
        AISetStock( player, 1, c_BWZR_OverlordSCBWTransportResearch );
        AISetStock( player, 1, c_BWZR_OverlordSCBWSightUpgrade );
    }
    BWZergBasicExpansion(player, c_ldPhaseMid, 5500, 1500);

    BWZergBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWZergGeneralBuild(player, c_ldPhaseMid);

    AILDStockWorkers( player, 30, c_BWZU_Drone);

    if (buildType == e_buildType_Rush) {
    }
    else if (buildType == e_buildType_Timing) {
    }
    else if (buildType == e_buildType_Power) {
        if (BWZergMacroExpand(player)) { return; }
    }
    else if (buildType == e_buildType_Macro) {
        if (BWZergMacroExpand(player)) { return; }
    }
    else if (buildType == e_buildType_Air) {
        if (BWZergMacroExpand(player)) { return; }
    }

    if (AINeedsDetection(player)) {
        //AIAddToStockArmy(player, c_BWZU_Overlord, 1);
        AISetStock( player, 2, c_BWZB_SporeColony );
    }

    AISetStockArmyScale(player, 0.70);

    AILDStockWorkers( player, 60, c_BWZU_Drone);

    BWZergUpgradesHard(player, c_ldPhaseMid);

    AISetStockArmyScale(player, 1.00);

    //AIAddToStockArmy(player, c_BWZU_Overlord, 2);

    BWZergTechUp(player, c_ldPhaseMid);

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  BWZergLateArmyInitHard
//--------------------------------------------------------------------------------------------------
int BWZergLateArmyInitHard (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 41 foodCost and 2600 resCost after about 270 seconds
        armyRoll = RandomInt(1,11);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 24);
            AIAddToStockArmy(player, c_BWZU_Scourge, 6);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 8);
            // validation: 38 units above with average cost 31 food and 2650 resources
            duration = 256 + RandomInt(-8, 12);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 17);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 23 units above with average cost 43 food and 2800 resources
            duration = 281 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 8);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 14);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 20 units above with average cost 40 food and 2700 resources
            duration = 272 + RandomInt(-9, 13);
        }
        else if (armyRoll <= 9) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 18);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 2, c_BWZU_Lurker, 3);
            // validation: 23 units above with average cost 43 food and 2825 resources
            duration = 283 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 11) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 8);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            AIAddToStockArmy(player, c_BWZU_Lurker, 4);
            // validation: 19 units above with average cost 41 food and 3200 resources
            duration = 295 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 44 foodCost and 2800 resCost after about 290 seconds
        armyRoll = RandomInt(1,8);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Ultralisk, 5);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            // validation: 13 units above with average cost 43 food and 3450 resources
            duration = 316 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Guardian, 5);
            AIAddToStockArmy(player, c_BWZU_Devourer, 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 12 units above with average cost 31 food and 4050 resources
            duration = 322 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 7);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            AIAddToStockArmy(player, c_BWZU_Lurker, 6);
            // validation: 18 units above with average cost 40 food and 3400 resources
            duration = 309 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 7);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Guardian, c_BWZU_Ultralisk), 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 2, c_BWZU_Defiler, 3);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 15 units above with average cost 34 food and 2975 resources
            duration = 282 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 46 foodCost and 3000 resCost after about 310 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 8);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 4, c_BWZU_Defiler, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 4, c_BWZU_Defiler, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 22 units above with average cost 41 food and 3450 resources
            duration = 320 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 2, c_BWZU_Lurker, 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 21 units above with average cost 41 food and 3725 resources
            duration = 332 + RandomInt(-11, 16);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 49 foodCost and 3200 resCost after about 330 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 18);
            AIAddToStockArmy(player, c_BWZU_Defiler, 4);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 25 units above with average cost 48 food and 3450 resources
            duration = 339 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 10);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Guardian, c_BWZU_Ultralisk), 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Defiler, 2, c_BWZU_Queen, 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 21 units above with average cost 47 food and 4075 resources
            duration = 364 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 8);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Guardian, c_BWZU_Ultralisk), 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Defiler, 2, c_BWZU_Queen, 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            AIAddToStockArmy(player, c_BWZU_Lurker, 4);
            // validation: 19 units above with average cost 44 food and 3900 resources
            duration = 351 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 32 foodCost and 3200 resCost after about 290 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 10);
            AIAddToStockArmy(player, c_BWZU_Devourer, 4);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            // validation: 16 units above with average cost 34 food and 3600 resources
            duration = 309 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Mutalisk, c_BWZU_Hydralisk), 2);
            AIAddToStockArmy(player, c_BWZU_Devourer, 2);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            // validation: 18 units above with average cost 38 food and 3550 resources
            duration = 316 + RandomInt(-10, 15);
        }
    }
    else {
        return BWZergLateArmyInitHard(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWZergFinalArmyInitHard
//--------------------------------------------------------------------------------------------------
int BWZergFinalArmyInitHard (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 57 foodCost and 3900 resCost after about 250 seconds
        armyRoll = RandomInt(1,10);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 40);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 16);
            // validation: 52 units above with average cost 44 food and 3900 resources
            duration = 236 + RandomInt(-7, 11);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 12);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 25);
            AIAddToStockArmy(player, c_BWZU_Defiler, 3);
            // validation: 35 units above with average cost 67 food and 4300 resources
            duration = 271 + RandomInt(-9, 13);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 20);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 25 units above with average cost 52 food and 3550 resources
            duration = 236 + RandomInt(-7, 11);
        }
        else if (armyRoll <= 9) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 24);
            AIAddToStockArmy(player, c_BWZU_Defiler, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Defiler, 2, c_BWZU_Lurker, 3);
            // validation: 32 units above with average cost 61 food and 4275 resources
            duration = 264 + RandomInt(-8, 13);
        }
        else if (armyRoll <= 10) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 14);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 2, c_BWZU_Defiler, 3);
            AIAddToStockArmy(player, c_BWZU_Lurker, 4);
            // validation: 23 units above with average cost 49 food and 3825 resources
            duration = 240 + RandomInt(-8, 12);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 61 foodCost and 4200 resCost after about 270 seconds
        armyRoll = RandomInt(1,8);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Ultralisk, 7);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            // validation: 15 units above with average cost 55 food and 4450 resources
            duration = 270 + RandomInt(-9, 13);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Guardian, 8);
            AIAddToStockArmy(player, c_BWZU_Devourer, 4);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 16 units above with average cost 45 food and 5950 resources
            duration = 299 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 14);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 2, c_BWZU_Defiler, 3);
            AIAddToStockArmy(player, c_BWZU_Lurker, 6);
            // validation: 26 units above with average cost 58 food and 4625 resources
            duration = 278 + RandomInt(-9, 13);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 7);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Guardian, 6, c_BWZU_Ultralisk, 5);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 2, c_BWZU_Defiler, 3);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 19 units above with average cost 51 food and 4825 resources
            duration = 275 + RandomInt(-9, 13);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 64 foodCost and 4500 resCost after about 290 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 16);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 4, c_BWZU_Defiler, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 4, c_BWZU_Defiler, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Queen, 4, c_BWZU_Defiler, 4);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 35 units above with average cost 68 food and 5550 resources
            duration = 322 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 8);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 12);
            AIAddToStockArmy(player, c_BWZU_Queen, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 8);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Defiler, 2, c_BWZU_Lurker, 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 31 units above with average cost 61 food and 5125 resources
            duration = 303 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 67 foodCost and 4800 resCost after about 310 seconds
        armyRoll = RandomInt(1,4);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 14);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 18);
            AIAddToStockArmy(player, c_BWZU_Defiler, 4);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Guardian, c_BWZU_Ultralisk), 2);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 27 units above with average cost 58 food and 4500 resources
            duration = 292 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 12);
            AIAddToStockArmy(player, c_BWZU_Defiler, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Guardian, 5, c_BWZU_Ultralisk, 4);
            AIAddToStockArmy(player, c_BWZU_Devourer, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Lurker, 2, c_BWZU_Defiler, 3);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            // validation: 27 units above with average cost 65 food and 6150 resources
            duration = 344 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 12);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Hydralisk, 3, c_BWZU_Zergling, 6);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Lurker, c_BWZU_Ultralisk), 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Hydralisk, 2, c_BWZU_Ultralisk, 1);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Defiler, 2, c_BWZU_Queen, 3);
            AIAddToStockArmy(player, c_BWZU_Lurker, 4);
            // validation: 27 units above with average cost 61 food and 4850 resources
            duration = 305 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 45 foodCost and 4500 resCost after about 270 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 14);
            AIAddToStockArmy(player, c_BWZU_Scourge, 8);
            AIAddToStockArmy(player, c_BWZU_Devourer, 5);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 23 units above with average cost 48 food and 5050 resources
            duration = 288 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 7);
            AIAddToStockArmy(player, c_BWZU_Scourge, 4);
            AIAddToStockArmy(player, c_BWZU_Devourer, 2);
            AIAddToStockArmy(player, c_BWZU_Guardian, 4);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 15 units above with average cost 40 food and 4700 resources
            duration = 268 + RandomInt(-8, 13);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Mutalisk, c_BWZU_Hydralisk), 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Mutalisk, c_BWZU_Hydralisk), 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Mutalisk, c_BWZU_Hydralisk), 3);
            AIAddToStockArmy(player, c_BWZU_Devourer, 2);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            // validation: 25 units above with average cost 52 food and 4775 resources
            duration = 287 + RandomInt(-9, 14);
        }
    }
    else {
        return BWZergFinalArmyInitHard(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWZergLateInitHard
//--------------------------------------------------------------------------------------------------
void BWZergLateInitHard (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int curPhase = c_ldPhaseLate;
    int buildType = 0;

    AIChooseNextLateGameBuild(player);
    buildType = AIGetUserInt(player, c_lateGameBuildType);

    if (lateLoop <= 0) { // First Late Loop
        AISetupNextArmy (player, buildType, curPhase, BWZergLateArmyInitHard);
    } else {
        curPhase = c_ldPhaseFinal + lateLoop;
        AISetupNextArmy (player, buildType, curPhase, BWZergFinalArmyInitHard);
    }

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsClearObs, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Late, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWZergLateBuildHard
//--------------------------------------------------------------------------------------------------
void BWZergLateBuildHard (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int buildType = AIGetUserInt(player, c_lateGameBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentLateGame(player)) {
        AISetMainState(player, e_mainState_Late, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    ZergBasicEconomy(player, c_ldPhaseLate, 20);
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWZR_OverlordSCBWSpeedUpgrade );
        AISetStock( player, 1, c_BWZR_OverlordSCBWTransportResearch );
    }
    ZergBasicExpansion(player, c_ldPhaseLate, 14000, 4500);

    BWZergBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWZergGeneralBuild(player, c_ldPhaseLate);

    AILDStockWorkers( player, 30, c_BWZU_Drone);

    if (buildType == e_buildType_Core) {
        if (BWZergMacroExpand(player)) { return; }
        //All these builds used to have a Queen here
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_HighTech) {
        if (BWZergMacroExpand(player)) { return; }
        //All these builds used to have a Queen here
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Special) {
        if (BWZergMacroExpand(player)) { return; }
        //All these builds used to have a Queen here
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Mixed) {
        if (BWZergMacroExpand(player)) { return; }
        //All these builds used to have a Queen here
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Air) {
        if (BWZergMacroExpand(player)) { return; }
        //All these builds used to have a Queen here
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }

    //AIAddToStockArmy(player, c_BWZU_Overlord, 2);
    
    AISetStockArmyScale(player, 0.70);

    AISetStock( player, 1, c_BWZR_OverlordSCBWSpeedUpgrade );
    AISetStock( player, 1, c_BWZR_OverlordSCBWTransportResearch );
    AISetStock( player, 1, c_BWZR_OverlordSCBWSightUpgrade );
    AISetStock( player, 2, c_BWZB_SunkenColony );

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 60, c_BWZU_Drone);

    if (lateLoop <= 0) { // First Late Loop
        BWZergUpgradesHard(player, c_ldPhaseLate);
        BWZergTechUp(player, c_ldPhaseLate);
    } else { // Remaining Loops
        BWZergUpgradesHard(player, c_ldPhaseFinal);
        BWZergTechUp(player, c_ldPhaseFinal);
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
    if (nextState) {
        lateLoop += 1;
        AISetUserInt(player, c_ldNumLateLoops, lateLoop);
    }
}

//--------------------------------------------------------------------------------------------------
//  BWZergOpenHard
//--------------------------------------------------------------------------------------------------
void BWZergOpenHard (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWZergOpenInitHard(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWZergOpenBuildHard(player); }
    else { ErrorMeleeScript(player, "Invalid Open MainSubState ZergHard"); }
}

//--------------------------------------------------------------------------------------------------
//  BWZergMidHard
//--------------------------------------------------------------------------------------------------
void BWZergMidHard (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWZergMidInitHard(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWZergMidBuildHard(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid MainSubState ZergHard"); }
}

//--------------------------------------------------------------------------------------------------
//  BWZergLateHard
//--------------------------------------------------------------------------------------------------
void BWZergLateHard (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWZergLateInitHard(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWZergLateBuildHard(player);  }
    else { ErrorMeleeScript(player, "Invalid Late MainSubState ZergHard"); }
}

