//==================================================================================================
//  BWZerg Medium Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  BWZergUpgradesMedi
//--------------------------------------------------------------------------------------------------
void BWZergUpgradesMedi (int player, int phase) {
    int buildType;

    if (phase < c_ldPhaseLate) {
        buildType = AIGetUserInt(player, c_openingBuildType);
    } else {
        buildType = AIGetUserInt(player, c_lateGameBuildType);
    }

    if (buildType != e_buildType_Air) {


        if (phase >= c_ldPhaseMid) {


            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl1 );
                AISetStock( player, 1, c_BWZR_ZergGroundCarapaceSCBW_Lvl1 );
                AISetStock( player, 1, c_BWZR_ZergMissileAttacksSCBW_Lvl1 );
                if (AITechCount(player, c_BWZU_Zergling, c_techCountInProgressOrBetter) >= 8) {
                    AISetStock( player, 1, c_BWZR_ZerglingSCBWSpeedUpgrade );
                }
                if (AITechCount(player, c_BWZU_Hydralisk, c_techCountInProgressOrBetter) >= 3) {
                    AISetStock( player, 1, c_BWZR_HydraliskSCBWSpeedUpgrade );
                }
                AISetStock( player, 1, c_BWZR_ZergSCBWBurrowResearch );

                if (phase >= c_ldPhaseFinal) {

                    AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergGroundCarapaceSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergMissileAttacksSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergFlyerAttacksSCBW_Lvl2 );
                    AISetStock( player, 1, c_BWZR_ZergFlyerCarapaceSCBW_Lvl2 );

                }
            }
        }
    }
    else {  // (buildType == e_buildType_Air) 


        if (phase >= c_ldPhaseMid) {


            if (phase >= c_ldPhaseLate) {

                AISetStock( player, 1, c_BWZR_ZergFlyerAttacksSCBW_Lvl1 );
                AISetStock( player, 1, c_BWZR_ZergFlyerCarapaceSCBW_Lvl1 );

                if (phase >= c_ldPhaseFinal) {

                    AISetStock( player, 1, c_BWZR_ZergFlyerAttacksSCBW_Lvl3 );
                    AISetStock( player, 1, c_BWZR_ZergFlyerCarapaceSCBW_Lvl3 );
                    if (AITechCount(player, c_BWZU_Hydralisk, c_techCountInProgressOrBetter) >= 3) {
                        AISetStock( player, 1, c_BWZR_HydraliskSCBWSpeedUpgrade );
                    }
                    AISetStock( player, 1, c_BWZR_ZergMissileAttacksSCBW_Lvl2 );
                    AISetStock( player, 1, c_BWZR_ZergGroundCarapaceSCBW_Lvl2 );
                    AISetStock( player, 1, c_BWZR_ZergMeleeAttacksSCBW_Lvl2 );

                }
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  BWZergOpenArmyInitMedi
//--------------------------------------------------------------------------------------------------
int BWZergOpenArmyInitMedi (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 8 foodCost and 440 resCost after about 356 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 14);
            // validation: 14 units above with average cost 7 food and 450 resources
            duration = 349 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 4) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 6 units above with average cost 9 food and 450 resources
            duration = 370 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZB_HydraliskDen, 1);
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 1);
            // validation: 6 units above with average cost 8 food and 450 resources
            duration = 359 + RandomInt(-11, 17);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 11 foodCost and 660 resCost after about 412 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 20);
            // validation: 20 units above with average cost 10 food and 700 resources
            duration = 413 + RandomInt(-13, 20);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            // validation: 8 units above with average cost 13 food and 650 resources
            duration = 428 + RandomInt(-14, 21);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWZB_HydraliskDen, 1);
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            // validation: 7 units above with average cost 11 food and 650 resources
            duration = 410 + RandomInt(-13, 20);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 15 foodCost and 900 resCost after about 525 seconds
        armyRoll = RandomInt(1,7);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 26);
            // validation: 26 units above with average cost 13 food and 950 resources
            duration = 520 + RandomInt(-17, 26);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 8);
            // validation: 10 units above with average cost 17 food and 850 resources
            duration = 530 + RandomInt(-17, 26);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            // validation: 10 units above with average cost 16 food and 900 resources
            duration = 533 + RandomInt(-17, 26);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 5);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 3);
            // validation: 10 units above with average cost 17 food and 1000 resources
            duration = 566 + RandomInt(-18, 28);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 8 foodCost and 480 resCost after about 225 seconds
        armyRoll = RandomInt(1,6);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 14);
            // validation: 14 units above with average cost 7 food and 500 resources
            duration = 222 + RandomInt(-7, 11);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 6 units above with average cost 9 food and 450 resources
            duration = 226 + RandomInt(-7, 11);
        }
        else if (armyRoll <= 6) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 1);
            // validation: 5 units above with average cost 8 food and 450 resources
            duration = 220 + RandomInt(-7, 11);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 9 foodCost and 900 resCost after about 543 seconds
        AIAddToStockArmy(player, c_BWZU_Zergling, 2);
        AIAddToStockArmy(player, c_BWZU_Mutalisk, 4);
        // validation: 6 units above with average cost 9 food and 850 resources
        duration = 531 + RandomInt(-17, 26);
    }
    else {
        return BWZergOpenArmyInitMedi(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWZergOpenInitMedi
//--------------------------------------------------------------------------------------------------
void BWZergOpenInitMedi (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseOpen, BWZergOpenArmyInitMedi);

    AISetMainState(player, e_mainState_Open, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWZergOpenBuildMedi
//--------------------------------------------------------------------------------------------------
void BWZergOpenBuildMedi (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Open, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    if (buildType == e_buildType_Rush) {
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 16, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_CreepColony );
        AISetStock( player, 1, c_BWZB_Extractor );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 1, c_BWZB_SunkenColony );
        AISetStock( player, 4, c_BWZU_Zergling );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_HydraliskDen );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms);
    }
    else if (buildType == e_buildType_Timing) {
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 16, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_CreepColony );
        AISetStock( player, 1, c_BWZB_Extractor );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 1, c_BWZB_SunkenColony );
        AISetStock( player, 4, c_BWZU_Zergling );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_HydraliskDen );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms);
        AISetStock( player, 2, c_BWZB_Extractor );
    }
    else if (buildType == e_buildType_Power) {
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 16, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 1, c_BWZB_CreepColony );
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_Extractor );
        AISetStock( player, 2, c_BWZB_SunkenColony );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 4, c_BWZU_Zergling );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_HydraliskDen );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms);
        AISetStock( player, 2, c_BWZB_Extractor );
    }
    else if (buildType == e_buildType_Macro) {
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_CreepColony );
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_SunkenColony );
        AISetStock( player, 1, c_BWZB_Extractor );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 4, c_BWZU_Zergling );
        AISetStock( player, 1, c_BWZB_HydraliskDen );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms);
        AISetStock( player, 2, c_BWZB_Extractor );

    }
    else if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWZB_Hatchery_Alias );
        AISetStock( player, 6, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZU_Overlord );
        AISetStock( player, 13, c_BWZU_Drone );
        AISetStock( player, 2, c_BWZU_Overlord );
        AISetStock( player, 17, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_CreepColony );
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 1, c_BWZB_SpawningPool );
        AISetStock( player, 2, c_BWZB_Extractor );
        AISetStock( player, 3, c_BWZU_Overlord );
        AISetStock( player, 1, c_BWZB_SunkenColony );
        AISetStock( player, 18, c_BWZU_Drone );
        AISetStock( player, 1, c_BWZB_Lair );
        AISetStock( player, 4, c_BWZU_Overlord );
        AISetStock( player, 1, c_BWZB_Spire_Alias );
        AISetStockFarms( player, c_BWZU_Overlord, c_stockNormalFarms );
        AISetStockUnitNext( player, 24, c_BWZU_Drone, c_stockIdle );
    }

    BWZergBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWZergGeneralBuild(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 0.70);

    BWZergUpgradesMedi(player, c_ldPhaseOpen);

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 24, c_BWZU_Drone);

    BWZergTechUp(player, c_ldPhaseOpen);

    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWZR_OverlordSCBWSpeedUpgrade );
        AISetStock( player, 1, c_BWZR_OverlordSCBWTransportResearch );
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Mid, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  BWZergMidArmyInitMedi
//--------------------------------------------------------------------------------------------------
int BWZergMidArmyInitMedi (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Rush) {
        // next attack should be around 16 foodCost and 960 resCost after about 320 seconds
        armyRoll = RandomInt(1,8);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 8);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 4);
            // validation: 12 units above with average cost 12 food and 1050 resources
            duration = 313 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 5);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 3);
            // validation: 10 units above with average cost 17 food and 1000 resources
            duration = 330 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 3);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 1);
            // validation: 10 units above with average cost 16 food and 950 resources
            duration = 319 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 1);
            // validation: 9 units above with average cost 15 food and 1100 resources
            duration = 334 + RandomInt(-11, 16);
        }
    }
    else if (buildType == e_buildType_Timing) {
        // next attack should be around 20 foodCost and 1200 resCost after about 350 seconds
        armyRoll = RandomInt(1,8);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 14);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 5);
            // validation: 19 units above with average cost 17 food and 1450 resources
            duration = 367 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 5);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 11 units above with average cost 19 food and 1150 resources
            duration = 340 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 10 units above with average cost 19 food and 1250 resources
            duration = 351 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 5);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 1);
            // validation: 10 units above with average cost 17 food and 1200 resources
            duration = 337 + RandomInt(-11, 16);
        }
    }
    else if (buildType == e_buildType_Power) {
        // next attack should be around 21 foodCost and 1260 resCost after about 370 seconds
        armyRoll = RandomInt(1,8);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 10);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 6);
            // validation: 16 units above with average cost 17 food and 1550 resources
            duration = 387 + RandomInt(-12, 19);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 12 units above with average cost 21 food and 1250 resources
            duration = 369 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 10 units above with average cost 19 food and 1250 resources
            duration = 360 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 3);
            // validation: 11 units above with average cost 19 food and 1400 resources
            duration = 378 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Macro) {
        // next attack should be around 29 foodCost and 1740 resCost after about 543 seconds
        // note: mid macro build did not send opening attack at 225 time
        armyRoll = RandomInt(1,8);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 16);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 6);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 23 units above with average cost 23 food and 2100 resources
            duration = 569 + RandomInt(-26, 39);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 10);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 16 units above with average cost 29 food and 1650 resources
            duration = 527 + RandomInt(-25, 37);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 5);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 3);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 14 units above with average cost 28 food and 1750 resources
            duration = 539 + RandomInt(-25, 38);
        }
        else if (armyRoll <= 8) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 8);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 16 units above with average cost 29 food and 1950 resources
            duration = 581 + RandomInt(-26, 40);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 14 foodCost and 1300 resCost after about 350 seconds
        AIAddToStockArmy(player, c_BWZU_Mutalisk, 6);
        AIAddToStockArmy(player, c_BWZU_Devourer, 1);
        // validation: 7 units above with average cost 14 food and 1450 resources
        duration = 366 + RandomInt(-12, 18);
    }
    else {
        return BWZergMidArmyInitMedi(player, e_buildType_Macro);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWZergMidInitMedi
//--------------------------------------------------------------------------------------------------
void BWZergMidInitMedi (int player) {
    int buildType = 0;

    AIChooseNextOpeningBuild(player);
    buildType = AIGetUserInt(player, c_openingBuildType);
    AISetupNextArmy (player, buildType, c_ldPhaseMid, BWZergMidArmyInitMedi);

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Mid, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWZergMidBuildMedi
//--------------------------------------------------------------------------------------------------
void BWZergMidBuildMedi (int player) {
    int buildType = AIGetUserInt(player, c_openingBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentOpening(player)) {
        AISetMainState(player, e_mainState_Mid, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    BWZergBasicEconomy(player, c_ldPhaseMid, 18);
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWZR_OverlordSCBWSpeedUpgrade );
        AISetStock( player, 1, c_BWZR_OverlordSCBWTransportResearch );
    }
    BWZergBasicExpansion(player, c_ldPhaseMid, 5500, 1500);

    BWZergBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWZergGeneralBuild(player, c_ldPhaseMid);

    AILDStockWorkers( player, 24, c_BWZU_Drone);

    if (buildType == e_buildType_Rush) {
    }
    else if (buildType == e_buildType_Timing) {
    }
    else if (buildType == e_buildType_Power) {
        if (BWZergMacroExpand(player)) { return; }
    }
    else if (buildType == e_buildType_Macro) {
        if (BWZergMacroExpand(player)) { return; }
    }
    else if (buildType == e_buildType_Air) {
        if (BWZergMacroExpand(player)) { return; }
    }

    if (AINeedsDetection(player)) {
        AIAddToStockArmy(player, c_BWZU_Overlord, 1);
        AISetStock( player, 2, c_BWZB_SporeColony );
    }

    AISetStockArmyScale(player, 0.70);

    AILDStockWorkers( player, 54, c_BWZU_Drone);

    BWZergUpgradesMedi(player, c_ldPhaseMid);

    AISetStockArmyScale(player, 1.00);

    AIAddToStockArmy(player, c_BWZU_Overlord, 2);

    BWZergTechUp(player, c_ldPhaseMid);

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
}

//--------------------------------------------------------------------------------------------------
//  BWZergLateArmyInitMedi
//--------------------------------------------------------------------------------------------------
int BWZergLateArmyInitMedi (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 29 foodCost and 1700 resCost after about 300 seconds
        armyRoll = RandomInt(1,9);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 16);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 23 units above with average cost 23 food and 2100 resources
            duration = 313 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 9);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 16 units above with average cost 29 food and 1800 resources
            duration = 307 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 5);
            // validation: 13 units above with average cost 25 food and 1600 resources
            duration = 283 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 9) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 14 units above with average cost 25 food and 1750 resources
            duration = 294 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 32 foodCost and 1900 resCost after about 320 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Ultralisk, 3);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 9 units above with average cost 27 food and 2150 resources
            duration = 325 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Guardian, 2);
            AIAddToStockArmy(player, c_BWZU_Devourer, 2);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            // validation: 8 units above with average cost 17 food and 2150 resources
            duration = 301 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 35 foodCost and 2100 resCost after about 340 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 6);
            // validation: 14 units above with average cost 25 food and 2150 resources
            duration = 320 + RandomInt(-10, 16);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 5);
            AIAddToStockArmy(player, c_BWZU_Queen, 3);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Lurker, 2, c_BWZU_Queen, 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 14 units above with average cost 26 food and 2275 resources
            duration = 330 + RandomInt(-11, 16);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 37 foodCost and 2300 resCost after about 360 seconds
        armyRoll = RandomInt(1,3);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 10);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 20 units above with average cost 37 food and 2450 resources
            duration = 369 + RandomInt(-12, 18);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 5);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 3);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Guardian, c_BWZU_Ultralisk), 2);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 15 units above with average cost 34 food and 2850 resources
            duration = 388 + RandomInt(-12, 19);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 23 foodCost and 2300 resCost after about 320 seconds
        AIAddToStockArmy(player, c_BWZU_Mutalisk, 9);
        AIAddToStockArmy(player, c_BWZU_Devourer, 2);
        // validation: 11 units above with average cost 22 food and 2300 resources
        duration = 317 + RandomInt(-10, 15);
    }
    else {
        return BWZergLateArmyInitMedi(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWZergFinalArmyInitMedi
//--------------------------------------------------------------------------------------------------
int BWZergFinalArmyInitMedi (int player, int buildType) {
    int armyRoll = 0;
    int duration = 0;

    if (buildType == e_buildType_Core) {
        // next attack should be around 42 foodCost and 2700 resCost after about 280 seconds
        armyRoll = RandomInt(1,9);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 30);
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 8);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 39 units above with average cost 34 food and 2950 resources
            duration = 278 + RandomInt(-9, 13);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 16);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 25 units above with average cost 47 food and 2800 resources
            duration = 292 + RandomInt(-9, 14);
        }
        else if (armyRoll <= 7) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 1);
            // validation: 19 units above with average cost 39 food and 2600 resources
            duration = 271 + RandomInt(-9, 13);
        }
        else if (armyRoll <= 9) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 12);
            AIAddToStockArmy(player, c_BWZU_Queen, 4);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 22 units above with average cost 41 food and 2850 resources
            duration = 284 + RandomInt(-9, 14);
        }
    }
    else if (buildType == e_buildType_HighTech) {
        // next attack should be around 45 foodCost and 2900 resCost after about 300 seconds
        armyRoll = RandomInt(1,5);
        if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Ultralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            // validation: 12 units above with average cost 45 food and 3650 resources
            duration = 332 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 5) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Guardian, 5);
            AIAddToStockArmy(player, c_BWZU_Devourer, 2);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            // validation: 11 units above with average cost 29 food and 3800 resources
            duration = 312 + RandomInt(-10, 15);
        }
    }
    else if (buildType == e_buildType_Special) {
        // next attack should be around 49 foodCost and 3200 resCost after about 320 seconds
        armyRoll = RandomInt(1,2);
        if (armyRoll <= 1) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 8);
            AIAddToStockArmy(player, c_BWZU_Queen, 10);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 23 units above with average cost 44 food and 3950 resources
            duration = 343 + RandomInt(-11, 17);
        }
        else if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 10);
            AIAddToStockArmy(player, c_BWZU_Queen, 5);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 2);
            AIAddToStockArmyPickFrom2Count(player, c_BWZU_Lurker, 2, c_BWZU_Queen, 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 23 units above with average cost 44 food and 3575 resources
            duration = 327 + RandomInt(-10, 16);
        }
    }
    else if (buildType == e_buildType_Mixed) {
        // next attack should be around 52 foodCost and 3500 resCost after about 340 seconds
        armyRoll = RandomInt(1,3);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 10);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Queen, 3);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Guardian, c_BWZU_Ultralisk), 1);
            AIAddToStockArmy(player, c_BWZU_Defiler, 1);
            // validation: 23 units above with average cost 47 food and 3525 resources
            duration = 333 + RandomInt(-11, 16);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Zergling, 2);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 6);
            AIAddToStockArmy(player, c_BWZU_Hydralisk, 4);
            AIAddToStockArmy(player, c_BWZU_Queen, 2);
            AIAddToStockArmy(player, AIPickFrom2(c_BWZU_Guardian, c_BWZU_Ultralisk), 3);
            AIAddToStockArmy(player, c_BWZU_Devourer, 1);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 20 units above with average cost 48 food and 4175 resources
            duration = 360 + RandomInt(-12, 18);
        }
    }
    else if (buildType == e_buildType_Air) {
        // next attack should be around 32 foodCost and 3200 resCost after about 300 seconds
        armyRoll = RandomInt(1,3);
        if (armyRoll <= 2) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 10);
            AIAddToStockArmy(player, c_BWZU_Devourer, 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 15 units above with average cost 32 food and 3350 resources
            duration = 305 + RandomInt(-10, 15);
        }
        else if (armyRoll <= 3) {
            AIAddToStockArmy(player, c_BWZU_Mutalisk, 3);
            AIAddToStockArmy(player, c_BWZU_Devourer, 2);
            AIAddToStockArmy(player, c_BWZU_Guardian, 3);
            AIAddToStockArmy(player, c_BWZU_Defiler, 2);
            // validation: 10 units above with average cost 28 food and 3350 resources
            duration = 297 + RandomInt(-9, 14);
        }
    }
    else {
        return BWZergFinalArmyInitMedi(player, e_buildType_Core);
    }

    AISetUserInt(player, c_ldNextArmyRoll, armyRoll);
    return duration;
}

//--------------------------------------------------------------------------------------------------
//  BWZergLateInitMedi
//--------------------------------------------------------------------------------------------------
void BWZergLateInitMedi (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int curPhase = c_ldPhaseLate;
    int buildType = 0;

    AIChooseNextLateGameBuild(player);
    buildType = AIGetUserInt(player, c_lateGameBuildType);

    if (lateLoop <= 0) { // First Late Loop
        AISetupNextArmy (player, buildType, curPhase, BWZergLateArmyInitMedi);
    } else {
        curPhase = c_ldPhaseFinal + lateLoop;
        AISetupNextArmy (player, buildType, curPhase, BWZergFinalArmyInitMedi);
    }

    AISetFlag(player, e_flagsScouting, true);
    AISetFlag(player, e_flagsClearObs, true);
    AISetFlag(player, e_flagsLateScout, true);
    AISetFlag(player, e_flagsDetect, true);

    AISetMainState(player, e_mainState_Late, e_mainSubState_Build);
}

//--------------------------------------------------------------------------------------------------
//  BWZergLateBuildMedi
//--------------------------------------------------------------------------------------------------
void BWZergLateBuildMedi (int player) {
    int lateLoop = AIGetUserInt(player, c_ldNumLateLoops);
    int buildType = AIGetUserInt(player, c_lateGameBuildType);
    int armyRoll = AIGetUserInt(player, c_ldNextArmyRoll);
    int timeOut = AIGetUserInt(player, c_nextArmyTime);
    bool nextState = false;

    if (AIHasPlayerChangedCurrentLateGame(player)) {
        AISetMainState(player, e_mainState_Late, e_mainSubState_Init);
        return;
    }

    AIClearStock(player);

    BWZergBasicEconomy(player, c_ldPhaseLate, 18);
    if (buildType == e_buildType_Air) {
        AISetStock( player, 1, c_BWZR_OverlordSCBWSpeedUpgrade );
        AISetStock( player, 1, c_BWZR_OverlordSCBWTransportResearch );
    }
    BWZergBasicExpansion(player, c_ldPhaseLate, 10000, 2500);

    BWZergBasicDefenseStock(player);

    AISetStockArmyScale(player, 0.35);

    BWZergGeneralBuild(player, c_ldPhaseLate);

    AILDStockWorkers( player, 24, c_BWZU_Drone);

    if (buildType == e_buildType_Core) {
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_HighTech) {
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Special) {
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Mixed) {
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }
    else if (buildType == e_buildType_Air) {
        if (BWZergMacroExpand(player)) { return; }
        AISetStock( player, 2, c_BWZB_EvolutionChamber );
    }

    AIAddToStockArmy(player, c_BWZU_Overlord, 2);

    AISetStockArmyScale(player, 0.70);

    AISetStock( player, 1, c_BWZR_OverlordSCBWSpeedUpgrade );
    AISetStock( player, 1, c_BWZR_OverlordSCBWTransportResearch );
    AISetStock( player, 1, c_BWZR_OverlordSCBWSightUpgrade );
    AISetStock( player, 2, c_BWZB_SporeColony );

    AISetStockArmyScale(player, 1.00);

    AILDStockWorkers( player, 54, c_BWZU_Drone);

    if (lateLoop <= 0) { // First Late Loop
        BWZergUpgradesMedi(player, c_ldPhaseLate);
        BWZergTechUp(player, c_ldPhaseLate);
    } else { // Remaining Loops
        BWZergUpgradesMedi(player, c_ldPhaseFinal);
        BWZergTechUp(player, c_ldPhaseFinal);
    }

    AIEnableStock(player);

    AILDGeneralSharedLogic(player);

    nextState = AITestTimeout(player, timeOut, e_mainState_Late, e_mainSubState_Init);
    if (nextState) {
        lateLoop += 1;
        AISetUserInt(player, c_ldNumLateLoops, lateLoop);
    }
}

//--------------------------------------------------------------------------------------------------
//  BWZergOpenMedi
//--------------------------------------------------------------------------------------------------
void BWZergOpenMedi (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWZergOpenInitMedi(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWZergOpenBuildMedi(player); }
    else { ErrorMeleeScript(player, "Invalid Open MainSubState BWZergMedi"); }
}

//--------------------------------------------------------------------------------------------------
//  BWZergMidMedi
//--------------------------------------------------------------------------------------------------
void BWZergMidMedi (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWZergMidInitMedi(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWZergMidBuildMedi(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid MainSubState BWZergMedi"); }
}

//--------------------------------------------------------------------------------------------------
//  BWZergLateMedi
//--------------------------------------------------------------------------------------------------
void BWZergLateMedi (int player) {
    int mainSubState = AIState(player, e_mainSubState);

    if (mainSubState != e_mainSubState_Build) {
        BWZergLateInitMedi(player);
        mainSubState = AIState(player, e_mainSubState);
    }

    if (mainSubState == e_mainSubState_Build) { BWZergLateBuildMedi(player);  }
    else { ErrorMeleeScript(player, "Invalid Late MainSubState BWZergMedi"); }
}

